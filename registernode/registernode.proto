syntax = "proto3";
package registernode;
import "rescode/rescode.proto";
import "common/common.proto";

option go_package="./registernode";

message NormalUserReq {
    common.Authorize auth = 1;
    string    account = 2;
    string    passwd = 3;
    string    code = 4;
    bool      policy = 5;
    string    source = 6;
    string    invitor = 7;
    map<string,string> extra = 8;
}

message NormalUserRes {
    rescode.Code          rescode = 1;
    string                resmsg = 2;
    map<string,string>    extra = 3;
}

message CooperatorUserReq {
    common.Authorize auth = 1;
    string    account = 2;
    string    passwd = 3;
    string    code = 4;
    string    contactor = 5;  // 联系人
    string    email = 6;
    bool      policy = 7;
    string    source = 8;
    string    invitor = 9;
    map<string,string> extra = 10;
}

message CooperatorUserRes {
    rescode.Code          rescode = 1;
    string                resmsg =  2;
    map<string,string>    extra = 3;
}

message AddFeedbackReq {
    common.Authorize            auth = 1;
    common.Feedback             feedback =2;
    map<string,string>          extra = 3;
}

message AddFeedbackRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    map<string,string>          extra = 3;
}

message GetFeedbackReq {
    common.Authorize            auth = 1;
    int64                       uid = 2;
    string                      mobile = 3;
    int32                       page = 4;
    int32                       size = 5;
    map<string,string>          extra = 6;
}

message GetFeedbackRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    repeated common.Feedback    feedbacks = 3;
    map<string,string>          extra = 4;
}

service RegisternodeService {
    // 创建普通用户
    rpc NormalUser(NormalUserReq) returns(NormalUserRes) {}

    // 创建合作用户
    rpc CooperatorUser(CooperatorUserReq) returns(CooperatorUserRes) {}

    // 添加反馈
    rpc AddFeedback(AddFeedbackReq) returns (AddFeedbackRes) {}
    // 获取反馈
    rpc GetFeedback(GetFeedbackReq) returns (GetFeedbackRes) {}
}