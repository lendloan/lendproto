// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: registernode.proto

package registernode

import (
	common "github.com/lendloan/lendproto/common"
	rescode "github.com/lendloan/lendproto/rescode"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NormalUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Account string            `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Passwd  string            `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Code    string            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Policy  bool              `protobuf:"varint,5,opt,name=policy,proto3" json:"policy,omitempty"`
	Source  string            `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	Invitor string            `protobuf:"bytes,7,opt,name=invitor,proto3" json:"invitor,omitempty"`
	Extra   map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NormalUserReq) Reset() {
	*x = NormalUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registernode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalUserReq) ProtoMessage() {}

func (x *NormalUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_registernode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalUserReq.ProtoReflect.Descriptor instead.
func (*NormalUserReq) Descriptor() ([]byte, []int) {
	return file_registernode_proto_rawDescGZIP(), []int{0}
}

func (x *NormalUserReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *NormalUserReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *NormalUserReq) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *NormalUserReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *NormalUserReq) GetPolicy() bool {
	if x != nil {
		return x.Policy
	}
	return false
}

func (x *NormalUserReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NormalUserReq) GetInvitor() string {
	if x != nil {
		return x.Invitor
	}
	return ""
}

func (x *NormalUserReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type NormalUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NormalUserRes) Reset() {
	*x = NormalUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registernode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalUserRes) ProtoMessage() {}

func (x *NormalUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_registernode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalUserRes.ProtoReflect.Descriptor instead.
func (*NormalUserRes) Descriptor() ([]byte, []int) {
	return file_registernode_proto_rawDescGZIP(), []int{1}
}

func (x *NormalUserRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *NormalUserRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *NormalUserRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type CooperatorUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth      *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Account   string            `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Passwd    string            `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Code      string            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Contactor string            `protobuf:"bytes,5,opt,name=contactor,proto3" json:"contactor,omitempty"` // 联系人
	Email     string            `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Policy    bool              `protobuf:"varint,7,opt,name=policy,proto3" json:"policy,omitempty"`
	Source    string            `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	Invitor   string            `protobuf:"bytes,9,opt,name=invitor,proto3" json:"invitor,omitempty"`
	Extra     map[string]string `protobuf:"bytes,10,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CooperatorUserReq) Reset() {
	*x = CooperatorUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registernode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CooperatorUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CooperatorUserReq) ProtoMessage() {}

func (x *CooperatorUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_registernode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CooperatorUserReq.ProtoReflect.Descriptor instead.
func (*CooperatorUserReq) Descriptor() ([]byte, []int) {
	return file_registernode_proto_rawDescGZIP(), []int{2}
}

func (x *CooperatorUserReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CooperatorUserReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CooperatorUserReq) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *CooperatorUserReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CooperatorUserReq) GetContactor() string {
	if x != nil {
		return x.Contactor
	}
	return ""
}

func (x *CooperatorUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CooperatorUserReq) GetPolicy() bool {
	if x != nil {
		return x.Policy
	}
	return false
}

func (x *CooperatorUserReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CooperatorUserReq) GetInvitor() string {
	if x != nil {
		return x.Invitor
	}
	return ""
}

func (x *CooperatorUserReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type CooperatorUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CooperatorUserRes) Reset() {
	*x = CooperatorUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registernode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CooperatorUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CooperatorUserRes) ProtoMessage() {}

func (x *CooperatorUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_registernode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CooperatorUserRes.ProtoReflect.Descriptor instead.
func (*CooperatorUserRes) Descriptor() ([]byte, []int) {
	return file_registernode_proto_rawDescGZIP(), []int{3}
}

func (x *CooperatorUserRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *CooperatorUserRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *CooperatorUserRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_registernode_proto protoreflect.FileDescriptor

var file_registernode_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f,
	0x64, 0x65, 0x1a, 0x15, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe,
	0x02, 0x0a, 0x0d, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc8, 0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d,
	0x73, 0x67, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfa, 0x02, 0x0a, 0x11, 0x43,
	0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a,
	0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd0, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x40,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xb5, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1b, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e,
	0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43,
	0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x6e, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registernode_proto_rawDescOnce sync.Once
	file_registernode_proto_rawDescData = file_registernode_proto_rawDesc
)

func file_registernode_proto_rawDescGZIP() []byte {
	file_registernode_proto_rawDescOnce.Do(func() {
		file_registernode_proto_rawDescData = protoimpl.X.CompressGZIP(file_registernode_proto_rawDescData)
	})
	return file_registernode_proto_rawDescData
}

var file_registernode_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_registernode_proto_goTypes = []interface{}{
	(*NormalUserReq)(nil),     // 0: registernode.NormalUserReq
	(*NormalUserRes)(nil),     // 1: registernode.NormalUserRes
	(*CooperatorUserReq)(nil), // 2: registernode.CooperatorUserReq
	(*CooperatorUserRes)(nil), // 3: registernode.CooperatorUserRes
	nil,                       // 4: registernode.NormalUserReq.ExtraEntry
	nil,                       // 5: registernode.NormalUserRes.ExtraEntry
	nil,                       // 6: registernode.CooperatorUserReq.ExtraEntry
	nil,                       // 7: registernode.CooperatorUserRes.ExtraEntry
	(*common.Authorize)(nil),  // 8: common.Authorize
	(rescode.Code)(0),         // 9: rescode.Code
}
var file_registernode_proto_depIdxs = []int32{
	8,  // 0: registernode.NormalUserReq.auth:type_name -> common.Authorize
	4,  // 1: registernode.NormalUserReq.extra:type_name -> registernode.NormalUserReq.ExtraEntry
	9,  // 2: registernode.NormalUserRes.rescode:type_name -> rescode.Code
	5,  // 3: registernode.NormalUserRes.extra:type_name -> registernode.NormalUserRes.ExtraEntry
	8,  // 4: registernode.CooperatorUserReq.auth:type_name -> common.Authorize
	6,  // 5: registernode.CooperatorUserReq.extra:type_name -> registernode.CooperatorUserReq.ExtraEntry
	9,  // 6: registernode.CooperatorUserRes.rescode:type_name -> rescode.Code
	7,  // 7: registernode.CooperatorUserRes.extra:type_name -> registernode.CooperatorUserRes.ExtraEntry
	0,  // 8: registernode.RegisternodeService.NormalUser:input_type -> registernode.NormalUserReq
	2,  // 9: registernode.RegisternodeService.CooperatorUser:input_type -> registernode.CooperatorUserReq
	1,  // 10: registernode.RegisternodeService.NormalUser:output_type -> registernode.NormalUserRes
	3,  // 11: registernode.RegisternodeService.CooperatorUser:output_type -> registernode.CooperatorUserRes
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_registernode_proto_init() }
func file_registernode_proto_init() {
	if File_registernode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_registernode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registernode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registernode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CooperatorUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registernode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CooperatorUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registernode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registernode_proto_goTypes,
		DependencyIndexes: file_registernode_proto_depIdxs,
		MessageInfos:      file_registernode_proto_msgTypes,
	}.Build()
	File_registernode_proto = out.File
	file_registernode_proto_rawDesc = nil
	file_registernode_proto_goTypes = nil
	file_registernode_proto_depIdxs = nil
}
