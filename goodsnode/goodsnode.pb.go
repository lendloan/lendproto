// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: goodsnode.proto

package goodsnode

import (
	common "github.com/lendloan/lendproto/common"
	rescode "github.com/lendloan/lendproto/rescode"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddMeGoodsCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op       int64                   `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	Category *common.MeGoodsCategory `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Extra    map[string]string       `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddMeGoodsCategoryReq) Reset() {
	*x = AddMeGoodsCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeGoodsCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeGoodsCategoryReq) ProtoMessage() {}

func (x *AddMeGoodsCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeGoodsCategoryReq.ProtoReflect.Descriptor instead.
func (*AddMeGoodsCategoryReq) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{0}
}

func (x *AddMeGoodsCategoryReq) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *AddMeGoodsCategoryReq) GetCategory() *common.MeGoodsCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *AddMeGoodsCategoryReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type AddMeGoodsCategoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddMeGoodsCategoryRes) Reset() {
	*x = AddMeGoodsCategoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeGoodsCategoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeGoodsCategoryRes) ProtoMessage() {}

func (x *AddMeGoodsCategoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeGoodsCategoryRes.ProtoReflect.Descriptor instead.
func (*AddMeGoodsCategoryRes) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{1}
}

func (x *AddMeGoodsCategoryRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *AddMeGoodsCategoryRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *AddMeGoodsCategoryRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GetMeGoodsCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Extra map[string]string `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMeGoodsCategoryReq) Reset() {
	*x = GetMeGoodsCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeGoodsCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeGoodsCategoryReq) ProtoMessage() {}

func (x *GetMeGoodsCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeGoodsCategoryReq.ProtoReflect.Descriptor instead.
func (*GetMeGoodsCategoryReq) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{2}
}

func (x *GetMeGoodsCategoryReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetMeGoodsCategoryReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GetMeGoodsCategoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode   rescode.Code              `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg    string                    `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Categorys []*common.MeGoodsCategory `protobuf:"bytes,3,rep,name=categorys,proto3" json:"categorys,omitempty"`
	Extra     map[string]string         `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMeGoodsCategoryRes) Reset() {
	*x = GetMeGoodsCategoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeGoodsCategoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeGoodsCategoryRes) ProtoMessage() {}

func (x *GetMeGoodsCategoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeGoodsCategoryRes.ProtoReflect.Descriptor instead.
func (*GetMeGoodsCategoryRes) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{3}
}

func (x *GetMeGoodsCategoryRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *GetMeGoodsCategoryRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *GetMeGoodsCategoryRes) GetCategorys() []*common.MeGoodsCategory {
	if x != nil {
		return x.Categorys
	}
	return nil
}

func (x *GetMeGoodsCategoryRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type AddMeGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op    int64             `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	Goods *common.MeGoods   `protobuf:"bytes,2,opt,name=goods,proto3" json:"goods,omitempty"`
	Extra map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddMeGoodsReq) Reset() {
	*x = AddMeGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeGoodsReq) ProtoMessage() {}

func (x *AddMeGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeGoodsReq.ProtoReflect.Descriptor instead.
func (*AddMeGoodsReq) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{4}
}

func (x *AddMeGoodsReq) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *AddMeGoodsReq) GetGoods() *common.MeGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *AddMeGoodsReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type AddMeGoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddMeGoodsRes) Reset() {
	*x = AddMeGoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMeGoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMeGoodsRes) ProtoMessage() {}

func (x *AddMeGoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMeGoodsRes.ProtoReflect.Descriptor instead.
func (*AddMeGoodsRes) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{5}
}

func (x *AddMeGoodsRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *AddMeGoodsRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *AddMeGoodsRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateMeGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op    int64             `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	Goods *common.MeGoods   `protobuf:"bytes,2,opt,name=goods,proto3" json:"goods,omitempty"`
	Extra map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateMeGoodsReq) Reset() {
	*x = UpdateMeGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMeGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMeGoodsReq) ProtoMessage() {}

func (x *UpdateMeGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMeGoodsReq.ProtoReflect.Descriptor instead.
func (*UpdateMeGoodsReq) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMeGoodsReq) GetOp() int64 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *UpdateMeGoodsReq) GetGoods() *common.MeGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *UpdateMeGoodsReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateMeGoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateMeGoodsRes) Reset() {
	*x = UpdateMeGoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMeGoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMeGoodsRes) ProtoMessage() {}

func (x *UpdateMeGoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMeGoodsRes.ProtoReflect.Descriptor instead.
func (*UpdateMeGoodsRes) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMeGoodsRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *UpdateMeGoodsRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *UpdateMeGoodsRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type QueryMeGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Extra map[string]string `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QueryMeGoodsReq) Reset() {
	*x = QueryMeGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMeGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMeGoodsReq) ProtoMessage() {}

func (x *QueryMeGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMeGoodsReq.ProtoReflect.Descriptor instead.
func (*QueryMeGoodsReq) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{8}
}

func (x *QueryMeGoodsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QueryMeGoodsReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type QueryMeGoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Goods   []*common.MeGoods `protobuf:"bytes,3,rep,name=goods,proto3" json:"goods,omitempty"`
	Extra   map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QueryMeGoodsRes) Reset() {
	*x = QueryMeGoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsnode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMeGoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMeGoodsRes) ProtoMessage() {}

func (x *QueryMeGoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_goodsnode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMeGoodsRes.ProtoReflect.Descriptor instead.
func (*QueryMeGoodsRes) Descriptor() ([]byte, []int) {
	return file_goodsnode_proto_rawDescGZIP(), []int{9}
}

func (x *QueryMeGoodsRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code_code_SUCCESS
}

func (x *QueryMeGoodsRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *QueryMeGoodsRes) GetGoods() []*common.MeGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *QueryMeGoodsRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_goodsnode_proto protoreflect.FileDescriptor

var file_goodsnode_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x15, 0x72, 0x65,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x6f, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xd5, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12,
	0x41, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67,
	0x12, 0x35, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xbb, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x39, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xc5, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f, 0x70, 0x12,
	0x25, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcb,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9a, 0x01, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf0, 0x01, 0x0a, 0x0f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x25,
	0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xa5, 0x03, 0x0a,
	0x10, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x6e,
	0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goodsnode_proto_rawDescOnce sync.Once
	file_goodsnode_proto_rawDescData = file_goodsnode_proto_rawDesc
)

func file_goodsnode_proto_rawDescGZIP() []byte {
	file_goodsnode_proto_rawDescOnce.Do(func() {
		file_goodsnode_proto_rawDescData = protoimpl.X.CompressGZIP(file_goodsnode_proto_rawDescData)
	})
	return file_goodsnode_proto_rawDescData
}

var file_goodsnode_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_goodsnode_proto_goTypes = []interface{}{
	(*AddMeGoodsCategoryReq)(nil),  // 0: goodsnode.AddMeGoodsCategoryReq
	(*AddMeGoodsCategoryRes)(nil),  // 1: goodsnode.AddMeGoodsCategoryRes
	(*GetMeGoodsCategoryReq)(nil),  // 2: goodsnode.GetMeGoodsCategoryReq
	(*GetMeGoodsCategoryRes)(nil),  // 3: goodsnode.GetMeGoodsCategoryRes
	(*AddMeGoodsReq)(nil),          // 4: goodsnode.AddMeGoodsReq
	(*AddMeGoodsRes)(nil),          // 5: goodsnode.AddMeGoodsRes
	(*UpdateMeGoodsReq)(nil),       // 6: goodsnode.UpdateMeGoodsReq
	(*UpdateMeGoodsRes)(nil),       // 7: goodsnode.UpdateMeGoodsRes
	(*QueryMeGoodsReq)(nil),        // 8: goodsnode.QueryMeGoodsReq
	(*QueryMeGoodsRes)(nil),        // 9: goodsnode.QueryMeGoodsRes
	nil,                            // 10: goodsnode.AddMeGoodsCategoryReq.ExtraEntry
	nil,                            // 11: goodsnode.AddMeGoodsCategoryRes.ExtraEntry
	nil,                            // 12: goodsnode.GetMeGoodsCategoryReq.ExtraEntry
	nil,                            // 13: goodsnode.GetMeGoodsCategoryRes.ExtraEntry
	nil,                            // 14: goodsnode.AddMeGoodsReq.ExtraEntry
	nil,                            // 15: goodsnode.AddMeGoodsRes.ExtraEntry
	nil,                            // 16: goodsnode.UpdateMeGoodsReq.ExtraEntry
	nil,                            // 17: goodsnode.UpdateMeGoodsRes.ExtraEntry
	nil,                            // 18: goodsnode.QueryMeGoodsReq.ExtraEntry
	nil,                            // 19: goodsnode.QueryMeGoodsRes.ExtraEntry
	(*common.MeGoodsCategory)(nil), // 20: common.MeGoodsCategory
	(rescode.Code)(0),              // 21: rescode.Code
	(*common.MeGoods)(nil),         // 22: common.MeGoods
}
var file_goodsnode_proto_depIdxs = []int32{
	20, // 0: goodsnode.AddMeGoodsCategoryReq.category:type_name -> common.MeGoodsCategory
	10, // 1: goodsnode.AddMeGoodsCategoryReq.extra:type_name -> goodsnode.AddMeGoodsCategoryReq.ExtraEntry
	21, // 2: goodsnode.AddMeGoodsCategoryRes.rescode:type_name -> rescode.Code
	11, // 3: goodsnode.AddMeGoodsCategoryRes.extra:type_name -> goodsnode.AddMeGoodsCategoryRes.ExtraEntry
	12, // 4: goodsnode.GetMeGoodsCategoryReq.extra:type_name -> goodsnode.GetMeGoodsCategoryReq.ExtraEntry
	21, // 5: goodsnode.GetMeGoodsCategoryRes.rescode:type_name -> rescode.Code
	20, // 6: goodsnode.GetMeGoodsCategoryRes.categorys:type_name -> common.MeGoodsCategory
	13, // 7: goodsnode.GetMeGoodsCategoryRes.extra:type_name -> goodsnode.GetMeGoodsCategoryRes.ExtraEntry
	22, // 8: goodsnode.AddMeGoodsReq.goods:type_name -> common.MeGoods
	14, // 9: goodsnode.AddMeGoodsReq.extra:type_name -> goodsnode.AddMeGoodsReq.ExtraEntry
	21, // 10: goodsnode.AddMeGoodsRes.rescode:type_name -> rescode.Code
	15, // 11: goodsnode.AddMeGoodsRes.extra:type_name -> goodsnode.AddMeGoodsRes.ExtraEntry
	22, // 12: goodsnode.UpdateMeGoodsReq.goods:type_name -> common.MeGoods
	16, // 13: goodsnode.UpdateMeGoodsReq.extra:type_name -> goodsnode.UpdateMeGoodsReq.ExtraEntry
	21, // 14: goodsnode.UpdateMeGoodsRes.rescode:type_name -> rescode.Code
	17, // 15: goodsnode.UpdateMeGoodsRes.extra:type_name -> goodsnode.UpdateMeGoodsRes.ExtraEntry
	18, // 16: goodsnode.QueryMeGoodsReq.extra:type_name -> goodsnode.QueryMeGoodsReq.ExtraEntry
	21, // 17: goodsnode.QueryMeGoodsRes.rescode:type_name -> rescode.Code
	22, // 18: goodsnode.QueryMeGoodsRes.goods:type_name -> common.MeGoods
	19, // 19: goodsnode.QueryMeGoodsRes.extra:type_name -> goodsnode.QueryMeGoodsRes.ExtraEntry
	0,  // 20: goodsnode.GoodsnodeService.AddMeGoodsCategory:input_type -> goodsnode.AddMeGoodsCategoryReq
	2,  // 21: goodsnode.GoodsnodeService.GetMeGoodsCategory:input_type -> goodsnode.GetMeGoodsCategoryReq
	4,  // 22: goodsnode.GoodsnodeService.AddMeGoods:input_type -> goodsnode.AddMeGoodsReq
	6,  // 23: goodsnode.GoodsnodeService.UpdateMeGoods:input_type -> goodsnode.UpdateMeGoodsReq
	8,  // 24: goodsnode.GoodsnodeService.QueryMeGoods:input_type -> goodsnode.QueryMeGoodsReq
	1,  // 25: goodsnode.GoodsnodeService.AddMeGoodsCategory:output_type -> goodsnode.AddMeGoodsCategoryRes
	3,  // 26: goodsnode.GoodsnodeService.GetMeGoodsCategory:output_type -> goodsnode.GetMeGoodsCategoryRes
	5,  // 27: goodsnode.GoodsnodeService.AddMeGoods:output_type -> goodsnode.AddMeGoodsRes
	7,  // 28: goodsnode.GoodsnodeService.UpdateMeGoods:output_type -> goodsnode.UpdateMeGoodsRes
	9,  // 29: goodsnode.GoodsnodeService.QueryMeGoods:output_type -> goodsnode.QueryMeGoodsRes
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_goodsnode_proto_init() }
func file_goodsnode_proto_init() {
	if File_goodsnode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goodsnode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeGoodsCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeGoodsCategoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeGoodsCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeGoodsCategoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMeGoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMeGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMeGoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMeGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsnode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMeGoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goodsnode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goodsnode_proto_goTypes,
		DependencyIndexes: file_goodsnode_proto_depIdxs,
		MessageInfos:      file_goodsnode_proto_msgTypes,
	}.Build()
	File_goodsnode_proto = out.File
	file_goodsnode_proto_rawDesc = nil
	file_goodsnode_proto_goTypes = nil
	file_goodsnode_proto_depIdxs = nil
}
