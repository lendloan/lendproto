syntax  =  "proto3";
package cronnode;
import "rescode/rescode.proto";
import "common/common.proto";

option go_package="./cronnode";


message CronCallReq {
    string                  func =  1;
    int64                   call_time =  2;
    map<string,string>      extra =  3;
}

message CronCallRes {
    rescode.Code          rescode =  1;
    string                resmsg =  2;
    map<string,string>    extra =  3;
}

message AddTaskReq {
    common.Authorize      auth =  1;
    common.CronItem      cron =  2;
    string                admin =  3;
    map<string,string>    extra =  4;
}

message AddTaskRes {
    rescode.Code          rescode =  1;
    string                resmsg =  2;
    map<string,string>    extra =  3;
}

message GetTaskReq {
    common.Authorize      auth =  1;
    bool                  repeated =  2;
    bool                  mutitask =  3;
    string                start_at =  4;
    map<string,string>    extra =  5;
}

message GetTaskRes {
    rescode.Code                rescode =  1;
    string                      resmsg =  2;
    repeated common.CronItem   crons =  3;
    map<string,string>          extra =  4;
}

message GetTaskCountReq {
    common.Authorize      auth =  1;
    bool                  repeated =  2;
    bool                  mutitask =  3;
    string                start_at =  4;
    map<string,string>    extra =  5;
}

message GetTaskCountRes {
    rescode.Code                rescode =  1;
    string                      resmsg =  2;
    int64                       count =  3;
    map<string,string>          extra =  4;
}

service CronnodeService {
	// 提交实名
	rpc CronCall(CronCallReq) returns (CronCallRes) {}
	// 添加任务
	rpc AddTask(AddTaskReq) returns (AddTaskRes) {}
	// 获取任务
	rpc GetTask(GetTaskReq) returns (GetTaskRes) {}
	// 获取任务数量
	rpc GetTaskCount(GetTaskCountReq) returns (GetTaskCountRes) {}
}