// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: rescode.proto

package rescode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_code_SUCCESS                  Code = 0     // 成功
	Code_code_ERROR                    Code = 1     // 失败
	Code_code_DB_ERROR                 Code = 2     // 数据异常
	Code_code_AUTH_ERR                 Code = 3     // 没有权限
	Code_code_MOBILE_ERR               Code = 4     // 电话号码错误
	Code_code_EMAIL_ERR                Code = 5     // 邮箱错误
	Code_code_PARAM_ERR                Code = 99    // 参数错误
	Code_code_EXISTS                   Code = 100   // 已经存在
	Code_code_IS_SELF                  Code = 101   // 自己
	Code_code_NOT_EXISTS               Code = 400   // 不存在
	Code_code_NOT_DATA                 Code = 404   // 没有数据
	Code_code_SYS_ERROR                Code = 999   // 系统错误
	Code_code_NODE_CREATE_ERR          Code = 9999  // 节点创建失败
	Code_code_SEND_CODE_ERR            Code = 10000 // 发送验证码错误
	Code_code_CODE_ERROR               Code = 10001 // 验证码错误
	Code_code_CODE_EXPIRE              Code = 10002 // 验证码过期
	Code_code_CODE_RATE                Code = 10003 // 请求频率太高
	Code_code_CODE_LIMIT               Code = 10004 // 验证码码达到限制
	Code_code_CODE_TYPE_ERR            Code = 10005 // 不支持的类型
	Code_code_JSON_MAR_ERR             Code = 10006 // json编码错误
	Code_code_JSON_UNMAR_ERR           Code = 10007 // json解码错误
	Code_code_CODE_NODE_ERROR          Code = 9000  // 验证码服务异常
	Code_code_CODE_NODE_NOINIT         Code = 9001  // 验证码服务没有初始化
	Code_code_DATA_NODE_ERROR          Code = 9002  // 数据服务异常
	Code_code_DATA_NODE_NOINIT         Code = 9003  // 数据服务没有初始化
	Code_code_DARTY_NODE_ERROR         Code = 9004  // 第三方服务异常
	Code_code_DARTY_NODE_NOINIT        Code = 9005  // 第三方服务没有初始化
	Code_code_WECHAT_LOGIN_ERROR       Code = 30001 // 微信登录错误
	Code_code_WECHAT_TOKEN_TIMEOUT     Code = 30002 // 微信token过期
	Code_code_WECHAT_REFRESH_ERROR     Code = 30003 // 微信token刷新失败
	Code_code_WECHAT_USERINFO_ERR      Code = 30004 //
	Code_code_WECHAT_PAY_ERR           Code = 30005 // 微信支付失败
	Code_code_ALIPAY_LOGIN_ERROR       Code = 30031 // 微信登录错误
	Code_code_ALIPAY_TOKEN_TIMEOUT     Code = 30032 // 微信token过期
	Code_code_ALIPAY_REFRESH_ERROR     Code = 30033 // 微信token刷新失败
	Code_code_ALIPAY_USERINFO_ERR      Code = 30034 // 微信信息获取错误
	Code_code_BAIDU_ACCESS_TOKEN_ERROR Code = 30061 // 百度accesstoken错误
	Code_code_BAIDU_ENTITY_ERROR       Code = 30062 // 百度entity请求错误
	Code_code_BAIDU_IDIDENT_ERROR      Code = 30063 // 百度身份证识别请求错误
	Code_code_BAIDU_IDIDENT_FAIL       Code = 30084 // 百度身份证识别失败
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:     "code_SUCCESS",
		1:     "code_ERROR",
		2:     "code_DB_ERROR",
		3:     "code_AUTH_ERR",
		4:     "code_MOBILE_ERR",
		5:     "code_EMAIL_ERR",
		99:    "code_PARAM_ERR",
		100:   "code_EXISTS",
		101:   "code_IS_SELF",
		400:   "code_NOT_EXISTS",
		404:   "code_NOT_DATA",
		999:   "code_SYS_ERROR",
		9999:  "code_NODE_CREATE_ERR",
		10000: "code_SEND_CODE_ERR",
		10001: "code_CODE_ERROR",
		10002: "code_CODE_EXPIRE",
		10003: "code_CODE_RATE",
		10004: "code_CODE_LIMIT",
		10005: "code_CODE_TYPE_ERR",
		10006: "code_JSON_MAR_ERR",
		10007: "code_JSON_UNMAR_ERR",
		9000:  "code_CODE_NODE_ERROR",
		9001:  "code_CODE_NODE_NOINIT",
		9002:  "code_DATA_NODE_ERROR",
		9003:  "code_DATA_NODE_NOINIT",
		9004:  "code_DARTY_NODE_ERROR",
		9005:  "code_DARTY_NODE_NOINIT",
		30001: "code_WECHAT_LOGIN_ERROR",
		30002: "code_WECHAT_TOKEN_TIMEOUT",
		30003: "code_WECHAT_REFRESH_ERROR",
		30004: "code_WECHAT_USERINFO_ERR",
		30005: "code_WECHAT_PAY_ERR",
		30031: "code_ALIPAY_LOGIN_ERROR",
		30032: "code_ALIPAY_TOKEN_TIMEOUT",
		30033: "code_ALIPAY_REFRESH_ERROR",
		30034: "code_ALIPAY_USERINFO_ERR",
		30061: "code_BAIDU_ACCESS_TOKEN_ERROR",
		30062: "code_BAIDU_ENTITY_ERROR",
		30063: "code_BAIDU_IDIDENT_ERROR",
		30084: "code_BAIDU_IDIDENT_FAIL",
	}
	Code_value = map[string]int32{
		"code_SUCCESS":                  0,
		"code_ERROR":                    1,
		"code_DB_ERROR":                 2,
		"code_AUTH_ERR":                 3,
		"code_MOBILE_ERR":               4,
		"code_EMAIL_ERR":                5,
		"code_PARAM_ERR":                99,
		"code_EXISTS":                   100,
		"code_IS_SELF":                  101,
		"code_NOT_EXISTS":               400,
		"code_NOT_DATA":                 404,
		"code_SYS_ERROR":                999,
		"code_NODE_CREATE_ERR":          9999,
		"code_SEND_CODE_ERR":            10000,
		"code_CODE_ERROR":               10001,
		"code_CODE_EXPIRE":              10002,
		"code_CODE_RATE":                10003,
		"code_CODE_LIMIT":               10004,
		"code_CODE_TYPE_ERR":            10005,
		"code_JSON_MAR_ERR":             10006,
		"code_JSON_UNMAR_ERR":           10007,
		"code_CODE_NODE_ERROR":          9000,
		"code_CODE_NODE_NOINIT":         9001,
		"code_DATA_NODE_ERROR":          9002,
		"code_DATA_NODE_NOINIT":         9003,
		"code_DARTY_NODE_ERROR":         9004,
		"code_DARTY_NODE_NOINIT":        9005,
		"code_WECHAT_LOGIN_ERROR":       30001,
		"code_WECHAT_TOKEN_TIMEOUT":     30002,
		"code_WECHAT_REFRESH_ERROR":     30003,
		"code_WECHAT_USERINFO_ERR":      30004,
		"code_WECHAT_PAY_ERR":           30005,
		"code_ALIPAY_LOGIN_ERROR":       30031,
		"code_ALIPAY_TOKEN_TIMEOUT":     30032,
		"code_ALIPAY_REFRESH_ERROR":     30033,
		"code_ALIPAY_USERINFO_ERR":      30034,
		"code_BAIDU_ACCESS_TOKEN_ERROR": 30061,
		"code_BAIDU_ENTITY_ERROR":       30062,
		"code_BAIDU_IDIDENT_ERROR":      30063,
		"code_BAIDU_IDIDENT_FAIL":       30084,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_rescode_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_rescode_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_rescode_proto_rawDescGZIP(), []int{0}
}

var File_rescode_proto protoreflect.FileDescriptor

var file_rescode_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2a, 0x8b, 0x08, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x42, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x45, 0x52, 0x52,
	0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0x63, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x49, 0x53, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x0f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x90, 0x03, 0x12,
	0x12, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0x94, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x53, 0x59, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xe7, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52,
	0x10, 0x8f, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x53, 0x45, 0x4e, 0x44,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x90, 0x4e, 0x12, 0x14, 0x0a, 0x0f,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x91, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x10, 0x92, 0x4e, 0x12, 0x13, 0x0a, 0x0e, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x10, 0x93, 0x4e, 0x12, 0x14,
	0x0a, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x10, 0x94, 0x4e, 0x12, 0x17, 0x0a, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x95, 0x4e, 0x12, 0x16, 0x0a,
	0x11, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x52, 0x5f, 0x45,
	0x52, 0x52, 0x10, 0x96, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x4a, 0x53,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4d, 0x41, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x97, 0x4e, 0x12,
	0x19, 0x0a, 0x14, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa8, 0x46, 0x12, 0x1a, 0x0a, 0x15, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x49,
	0x4e, 0x49, 0x54, 0x10, 0xa9, 0x46, 0x12, 0x19, 0x0a, 0x14, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xaa,
	0x46, 0x12, 0x1a, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0xab, 0x46, 0x12, 0x1a, 0x0a,
	0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xac, 0x46, 0x12, 0x1b, 0x0a, 0x16, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x44, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x49,
	0x4e, 0x49, 0x54, 0x10, 0xad, 0x46, 0x12, 0x1d, 0x0a, 0x17, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x57,
	0x45, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0xb1, 0xea, 0x01, 0x12, 0x1f, 0x0a, 0x19, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x45,
	0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f,
	0x55, 0x54, 0x10, 0xb2, 0xea, 0x01, 0x12, 0x1f, 0x0a, 0x19, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x57,
	0x45, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0xb3, 0xea, 0x01, 0x12, 0x1e, 0x0a, 0x18, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x5f,
	0x45, 0x52, 0x52, 0x10, 0xb4, 0xea, 0x01, 0x12, 0x19, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xb5,
	0xea, 0x01, 0x12, 0x1d, 0x0a, 0x17, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x4c, 0x49, 0x50, 0x41,
	0x59, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xcf, 0xea,
	0x01, 0x12, 0x1f, 0x0a, 0x19, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x4c, 0x49, 0x50, 0x41, 0x59,
	0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0xd0,
	0xea, 0x01, 0x12, 0x1f, 0x0a, 0x19, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x4c, 0x49, 0x50, 0x41,
	0x59, 0x5f, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0xd1, 0xea, 0x01, 0x12, 0x1e, 0x0a, 0x18, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x4c, 0x49, 0x50,
	0x41, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x45, 0x52, 0x52, 0x10,
	0xd2, 0xea, 0x01, 0x12, 0x23, 0x0a, 0x1d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x42, 0x41, 0x49, 0x44,
	0x55, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0xed, 0xea, 0x01, 0x12, 0x1d, 0x0a, 0x17, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x42, 0x41, 0x49, 0x44, 0x55, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0xee, 0xea, 0x01, 0x12, 0x1e, 0x0a, 0x18, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x42, 0x41, 0x49, 0x44, 0x55, 0x5f, 0x49, 0x44, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0xef, 0xea, 0x01, 0x12, 0x1d, 0x0a, 0x17, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x42, 0x41, 0x49, 0x44, 0x55, 0x5f, 0x49, 0x44, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0x84, 0xeb, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x72, 0x65, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rescode_proto_rawDescOnce sync.Once
	file_rescode_proto_rawDescData = file_rescode_proto_rawDesc
)

func file_rescode_proto_rawDescGZIP() []byte {
	file_rescode_proto_rawDescOnce.Do(func() {
		file_rescode_proto_rawDescData = protoimpl.X.CompressGZIP(file_rescode_proto_rawDescData)
	})
	return file_rescode_proto_rawDescData
}

var file_rescode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rescode_proto_goTypes = []interface{}{
	(Code)(0), // 0: rescode.Code
}
var file_rescode_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rescode_proto_init() }
func file_rescode_proto_init() {
	if File_rescode_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rescode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rescode_proto_goTypes,
		DependencyIndexes: file_rescode_proto_depIdxs,
		EnumInfos:         file_rescode_proto_enumTypes,
	}.Build()
	File_rescode_proto = out.File
	file_rescode_proto_rawDesc = nil
	file_rescode_proto_goTypes = nil
	file_rescode_proto_depIdxs = nil
}
