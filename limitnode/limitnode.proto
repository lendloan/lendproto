syntax  =  "proto3";
package limitnode;
import "rescode/rescode.proto";
import "common/common.proto";
option go_package="./limitnode";


message ModifyTimuLimitReq {
    common.Authorize     auth = 1;
    int64                  uid = 2;
    map<string,string>   extra = 3;
}

message ModifyTimuLimitRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message AddTimuLimitReq {
    common.Authorize     auth = 1;
    int64                  uid = 2;
    map<string,string>   extra = 3;
}

message AddTimuLimitRes {
    rescode.Code      rescode = 1;
    string            resmsg = 2;
    map<string,string> extra = 3;
}

message BrowserTimuLimitReq {
    common.Authorize     auth = 1;
    string               key = 2;
    string               meta = 3;
    map<string,string>   extra = 4;
}

message BrowserTimuLimitRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    string              meta = 3;
    map<string,string>  extra = 4;
}

message DownTimuLimitReq {
    common.Authorize     auth = 1;
    string               key = 2;
    string               meta = 3;
    map<string,string>   extra = 4;
}

message DownTimuLimitRes {
    rescode.Code        rescode = 1;
    string              resmsg = 2;
    string              meta = 3;
    map<string,string>  extra = 4;
}

service LimitnodeService {
	// 检查修改试题是否受限
	rpc  ModifyTimuLimit(ModifyTimuLimitReq) returns (ModifyTimuLimitRes) {}
	// 检查添加试题是否受限
	rpc  AddTimuLimit(AddTimuLimitReq) returns (AddTimuLimitRes) {}
    // 浏览试题量是否达到限制
    rpc  BrowserTimuLimit(BrowserTimuLimitReq) returns (BrowserTimuLimitRes) {}
    // 下载试题是否达到限制
    rpc  DownTimuLimit(DownTimuLimitReq) returns (DownTimuLimitRes) {}
}
