// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: loannode.proto

package loannode

import (
	common "github.com/lendloan/lendproto/common"
	rescode "github.com/lendloan/lendproto/rescode"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddLendLoanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Uid      int64             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Llid     int64             `protobuf:"varint,3,opt,name=llid,proto3" json:"llid,omitempty"`
	Lendloan *common.LendLoan  `protobuf:"bytes,4,opt,name=lendloan,proto3" json:"lendloan,omitempty"`
	Extra    map[string]string `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddLendLoanReq) Reset() {
	*x = AddLendLoanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLendLoanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLendLoanReq) ProtoMessage() {}

func (x *AddLendLoanReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLendLoanReq.ProtoReflect.Descriptor instead.
func (*AddLendLoanReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{0}
}

func (x *AddLendLoanReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *AddLendLoanReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AddLendLoanReq) GetLlid() int64 {
	if x != nil {
		return x.Llid
	}
	return 0
}

func (x *AddLendLoanReq) GetLendloan() *common.LendLoan {
	if x != nil {
		return x.Lendloan
	}
	return nil
}

func (x *AddLendLoanReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type AddLendLoanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddLendLoanRes) Reset() {
	*x = AddLendLoanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLendLoanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLendLoanRes) ProtoMessage() {}

func (x *AddLendLoanRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLendLoanRes.ProtoReflect.Descriptor instead.
func (*AddLendLoanRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{1}
}

func (x *AddLendLoanRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *AddLendLoanRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *AddLendLoanRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type CreateGatherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	NdUid  int64             `protobuf:"varint,2,opt,name=nd_uid,json=ndUid,proto3" json:"nd_uid,omitempty"`
	AnUid  int64             `protobuf:"varint,3,opt,name=an_uid,json=anUid,proto3" json:"an_uid,omitempty"`
	Expire int64             `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	Desc   string            `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Remark string            `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	Extra  map[string]string `protobuf:"bytes,7,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateGatherReq) Reset() {
	*x = CreateGatherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGatherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGatherReq) ProtoMessage() {}

func (x *CreateGatherReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGatherReq.ProtoReflect.Descriptor instead.
func (*CreateGatherReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGatherReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CreateGatherReq) GetNdUid() int64 {
	if x != nil {
		return x.NdUid
	}
	return 0
}

func (x *CreateGatherReq) GetAnUid() int64 {
	if x != nil {
		return x.AnUid
	}
	return 0
}

func (x *CreateGatherReq) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *CreateGatherReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateGatherReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateGatherReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type CreateGatherRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Llid    int64             `protobuf:"varint,3,opt,name=llid,proto3" json:"llid,omitempty"`
	Extra   map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateGatherRes) Reset() {
	*x = CreateGatherRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGatherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGatherRes) ProtoMessage() {}

func (x *CreateGatherRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGatherRes.ProtoReflect.Descriptor instead.
func (*CreateGatherRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGatherRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *CreateGatherRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *CreateGatherRes) GetLlid() int64 {
	if x != nil {
		return x.Llid
	}
	return 0
}

func (x *CreateGatherRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LendLoanGatherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Uid   int64             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Page  int32             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size  int32             `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Extra map[string]string `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanGatherReq) Reset() {
	*x = LendLoanGatherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanGatherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanGatherReq) ProtoMessage() {}

func (x *LendLoanGatherReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanGatherReq.ProtoReflect.Descriptor instead.
func (*LendLoanGatherReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{4}
}

func (x *LendLoanGatherReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *LendLoanGatherReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LendLoanGatherReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LendLoanGatherReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *LendLoanGatherReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LendLoanGatherRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Gathers []*common.Gather  `protobuf:"bytes,3,rep,name=gathers,proto3" json:"gathers,omitempty"`
	Extra   map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanGatherRes) Reset() {
	*x = LendLoanGatherRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanGatherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanGatherRes) ProtoMessage() {}

func (x *LendLoanGatherRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanGatherRes.ProtoReflect.Descriptor instead.
func (*LendLoanGatherRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{5}
}

func (x *LendLoanGatherRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *LendLoanGatherRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *LendLoanGatherRes) GetGathers() []*common.Gather {
	if x != nil {
		return x.Gathers
	}
	return nil
}

func (x *LendLoanGatherRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LendLoanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *common.Authorize `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Gid   int64             `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Uid   int64             `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Extra map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanReq) Reset() {
	*x = LendLoanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanReq) ProtoMessage() {}

func (x *LendLoanReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanReq.ProtoReflect.Descriptor instead.
func (*LendLoanReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{6}
}

func (x *LendLoanReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *LendLoanReq) GetGid() int64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *LendLoanReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LendLoanReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LendLoanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode   rescode.Code           `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg    string                 `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Gather    *common.LendLoanGather `protobuf:"bytes,3,opt,name=gather,proto3" json:"gather,omitempty"`
	Lendloans []*common.LendLoan     `protobuf:"bytes,4,rep,name=lendloans,proto3" json:"lendloans,omitempty"`
	Extra     map[string]string      `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanRes) Reset() {
	*x = LendLoanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanRes) ProtoMessage() {}

func (x *LendLoanRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanRes.ProtoReflect.Descriptor instead.
func (*LendLoanRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{7}
}

func (x *LendLoanRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *LendLoanRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *LendLoanRes) GetGather() *common.LendLoanGather {
	if x != nil {
		return x.Gather
	}
	return nil
}

func (x *LendLoanRes) GetLendloans() []*common.LendLoan {
	if x != nil {
		return x.Lendloans
	}
	return nil
}

func (x *LendLoanRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GatherStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *common.Authorize      `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Id     int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Uid    int64                  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Status common.LendLoan_Status `protobuf:"varint,4,opt,name=status,proto3,enum=common.LendLoan_Status" json:"status,omitempty"`
	Extra  map[string]string      `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GatherStatusReq) Reset() {
	*x = GatherStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatherStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatherStatusReq) ProtoMessage() {}

func (x *GatherStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatherStatusReq.ProtoReflect.Descriptor instead.
func (*GatherStatusReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{8}
}

func (x *GatherStatusReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GatherStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GatherStatusReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GatherStatusReq) GetStatus() common.LendLoan_Status {
	if x != nil {
		return x.Status
	}
	return common.LendLoan_Status(0)
}

func (x *GatherStatusReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GatherStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GatherStatusRes) Reset() {
	*x = GatherStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatherStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatherStatusRes) ProtoMessage() {}

func (x *GatherStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatherStatusRes.ProtoReflect.Descriptor instead.
func (*GatherStatusRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{9}
}

func (x *GatherStatusRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *GatherStatusRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *GatherStatusRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LendLoanStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *common.Authorize      `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Id     int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Uid    int64                  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Status common.LendLoan_Status `protobuf:"varint,4,opt,name=status,proto3,enum=common.LendLoan_Status" json:"status,omitempty"`
	Extra  map[string]string      `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanStatusReq) Reset() {
	*x = LendLoanStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanStatusReq) ProtoMessage() {}

func (x *LendLoanStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanStatusReq.ProtoReflect.Descriptor instead.
func (*LendLoanStatusReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{10}
}

func (x *LendLoanStatusReq) GetAuth() *common.Authorize {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *LendLoanStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LendLoanStatusReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LendLoanStatusReq) GetStatus() common.LendLoan_Status {
	if x != nil {
		return x.Status
	}
	return common.LendLoan_Status(0)
}

func (x *LendLoanStatusReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LendLoanStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanStatusRes) Reset() {
	*x = LendLoanStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanStatusRes) ProtoMessage() {}

func (x *LendLoanStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanStatusRes.ProtoReflect.Descriptor instead.
func (*LendLoanStatusRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{11}
}

func (x *LendLoanStatusRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *LendLoanStatusRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *LendLoanStatusRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LlendNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid   int64             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name  string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Extra map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LlendNameReq) Reset() {
	*x = LlendNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LlendNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LlendNameReq) ProtoMessage() {}

func (x *LlendNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LlendNameReq.ProtoReflect.Descriptor instead.
func (*LlendNameReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{12}
}

func (x *LlendNameReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LlendNameReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LlendNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LlendNameReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LlendNameRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LlendNameRes) Reset() {
	*x = LlendNameRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LlendNameRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LlendNameRes) ProtoMessage() {}

func (x *LlendNameRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LlendNameRes.ProtoReflect.Descriptor instead.
func (*LlendNameRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{13}
}

func (x *LlendNameRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *LlendNameRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *LlendNameRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LlendMediaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid   int64              `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Media *common.ShareImage `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
	Extra map[string]string  `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LlendMediaReq) Reset() {
	*x = LlendMediaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LlendMediaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LlendMediaReq) ProtoMessage() {}

func (x *LlendMediaReq) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LlendMediaReq.ProtoReflect.Descriptor instead.
func (*LlendMediaReq) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{14}
}

func (x *LlendMediaReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LlendMediaReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LlendMediaReq) GetMedia() *common.ShareImage {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *LlendMediaReq) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LlendMediaRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode rescode.Code      `protobuf:"varint,1,opt,name=rescode,proto3,enum=rescode.Code" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Extra   map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LlendMediaRes) Reset() {
	*x = LlendMediaRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loannode_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LlendMediaRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LlendMediaRes) ProtoMessage() {}

func (x *LlendMediaRes) ProtoReflect() protoreflect.Message {
	mi := &file_loannode_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LlendMediaRes.ProtoReflect.Descriptor instead.
func (*LlendMediaRes) Descriptor() ([]byte, []int) {
	return file_loannode_proto_rawDescGZIP(), []int{15}
}

func (x *LlendMediaRes) GetRescode() rescode.Code {
	if x != nil {
		return x.Rescode
	}
	return rescode.Code(0)
}

func (x *LlendMediaRes) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *LlendMediaRes) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_loannode_proto protoreflect.FileDescriptor

var file_loannode_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x15, 0x72, 0x65, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4c,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x6c, 0x6c, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x65, 0x6e, 0x64, 0x6c,
	0x6f, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x08, 0x6c, 0x65, 0x6e,
	0x64, 0x6c, 0x6f, 0x61, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12,
	0x3a, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x02, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x15, 0x0a, 0x06, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6e, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x01, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x6c,
	0x69, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x01, 0x0a, 0x11, 0x4c, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf7, 0x01, 0x0a, 0x11, 0x4c, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67,
	0x12, 0x28, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x07, 0x67, 0x61, 0x74, 0x68, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x37,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xa1, 0x02, 0x0a, 0x0b, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d,
	0x73, 0x67, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x06, 0x67, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x65, 0x6e, 0x64, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x09, 0x6c, 0x65, 0x6e, 0x64, 0x6c, 0x6f, 0x61,
	0x6e, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x02, 0x0a, 0x0f, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x61, 0x6e, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x47,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x47,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12,
	0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x86, 0x02, 0x0a, 0x11, 0x4c, 0x65, 0x6e, 0x64, 0x4c,
	0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xcd, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb8, 0x01, 0x0a, 0x0c, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x0c, 0x4c,
	0x6c, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72,
	0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xd0, 0x01, 0x0a, 0x0d, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x39,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xc5, 0x01, 0x0a, 0x0d, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xcf, 0x04, 0x0a, 0x0f,
	0x4c, 0x6f, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x45, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x19,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65, 0x6e,
	0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x08, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x16, 0x2e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0c, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x4c, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x4c, 0x6c, 0x65, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x6c, 0x65, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a, 0x4c, 0x6c, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x6c,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x6c, 0x6f, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_loannode_proto_rawDescOnce sync.Once
	file_loannode_proto_rawDescData = file_loannode_proto_rawDesc
)

func file_loannode_proto_rawDescGZIP() []byte {
	file_loannode_proto_rawDescOnce.Do(func() {
		file_loannode_proto_rawDescData = protoimpl.X.CompressGZIP(file_loannode_proto_rawDescData)
	})
	return file_loannode_proto_rawDescData
}

var file_loannode_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_loannode_proto_goTypes = []interface{}{
	(*AddLendLoanReq)(nil),        // 0: limitnode.AddLendLoanReq
	(*AddLendLoanRes)(nil),        // 1: limitnode.AddLendLoanRes
	(*CreateGatherReq)(nil),       // 2: limitnode.CreateGatherReq
	(*CreateGatherRes)(nil),       // 3: limitnode.CreateGatherRes
	(*LendLoanGatherReq)(nil),     // 4: limitnode.LendLoanGatherReq
	(*LendLoanGatherRes)(nil),     // 5: limitnode.LendLoanGatherRes
	(*LendLoanReq)(nil),           // 6: limitnode.LendLoanReq
	(*LendLoanRes)(nil),           // 7: limitnode.LendLoanRes
	(*GatherStatusReq)(nil),       // 8: limitnode.GatherStatusReq
	(*GatherStatusRes)(nil),       // 9: limitnode.GatherStatusRes
	(*LendLoanStatusReq)(nil),     // 10: limitnode.LendLoanStatusReq
	(*LendLoanStatusRes)(nil),     // 11: limitnode.LendLoanStatusRes
	(*LlendNameReq)(nil),          // 12: limitnode.LlendNameReq
	(*LlendNameRes)(nil),          // 13: limitnode.LlendNameRes
	(*LlendMediaReq)(nil),         // 14: limitnode.LlendMediaReq
	(*LlendMediaRes)(nil),         // 15: limitnode.LlendMediaRes
	nil,                           // 16: limitnode.AddLendLoanReq.ExtraEntry
	nil,                           // 17: limitnode.AddLendLoanRes.ExtraEntry
	nil,                           // 18: limitnode.CreateGatherReq.ExtraEntry
	nil,                           // 19: limitnode.CreateGatherRes.ExtraEntry
	nil,                           // 20: limitnode.LendLoanGatherReq.ExtraEntry
	nil,                           // 21: limitnode.LendLoanGatherRes.ExtraEntry
	nil,                           // 22: limitnode.LendLoanReq.ExtraEntry
	nil,                           // 23: limitnode.LendLoanRes.ExtraEntry
	nil,                           // 24: limitnode.GatherStatusReq.ExtraEntry
	nil,                           // 25: limitnode.GatherStatusRes.ExtraEntry
	nil,                           // 26: limitnode.LendLoanStatusReq.ExtraEntry
	nil,                           // 27: limitnode.LendLoanStatusRes.ExtraEntry
	nil,                           // 28: limitnode.LlendNameReq.ExtraEntry
	nil,                           // 29: limitnode.LlendNameRes.ExtraEntry
	nil,                           // 30: limitnode.LlendMediaReq.ExtraEntry
	nil,                           // 31: limitnode.LlendMediaRes.ExtraEntry
	(*common.Authorize)(nil),      // 32: common.Authorize
	(*common.LendLoan)(nil),       // 33: common.LendLoan
	(rescode.Code)(0),             // 34: rescode.Code
	(*common.Gather)(nil),         // 35: common.Gather
	(*common.LendLoanGather)(nil), // 36: common.LendLoanGather
	(common.LendLoan_Status)(0),   // 37: common.LendLoan_Status
	(*common.ShareImage)(nil),     // 38: common.ShareImage
}
var file_loannode_proto_depIdxs = []int32{
	32, // 0: limitnode.AddLendLoanReq.auth:type_name -> common.Authorize
	33, // 1: limitnode.AddLendLoanReq.lendloan:type_name -> common.LendLoan
	16, // 2: limitnode.AddLendLoanReq.extra:type_name -> limitnode.AddLendLoanReq.ExtraEntry
	34, // 3: limitnode.AddLendLoanRes.rescode:type_name -> rescode.Code
	17, // 4: limitnode.AddLendLoanRes.extra:type_name -> limitnode.AddLendLoanRes.ExtraEntry
	32, // 5: limitnode.CreateGatherReq.auth:type_name -> common.Authorize
	18, // 6: limitnode.CreateGatherReq.extra:type_name -> limitnode.CreateGatherReq.ExtraEntry
	34, // 7: limitnode.CreateGatherRes.rescode:type_name -> rescode.Code
	19, // 8: limitnode.CreateGatherRes.extra:type_name -> limitnode.CreateGatherRes.ExtraEntry
	32, // 9: limitnode.LendLoanGatherReq.auth:type_name -> common.Authorize
	20, // 10: limitnode.LendLoanGatherReq.extra:type_name -> limitnode.LendLoanGatherReq.ExtraEntry
	34, // 11: limitnode.LendLoanGatherRes.rescode:type_name -> rescode.Code
	35, // 12: limitnode.LendLoanGatherRes.gathers:type_name -> common.Gather
	21, // 13: limitnode.LendLoanGatherRes.extra:type_name -> limitnode.LendLoanGatherRes.ExtraEntry
	32, // 14: limitnode.LendLoanReq.auth:type_name -> common.Authorize
	22, // 15: limitnode.LendLoanReq.extra:type_name -> limitnode.LendLoanReq.ExtraEntry
	34, // 16: limitnode.LendLoanRes.rescode:type_name -> rescode.Code
	36, // 17: limitnode.LendLoanRes.gather:type_name -> common.LendLoanGather
	33, // 18: limitnode.LendLoanRes.lendloans:type_name -> common.LendLoan
	23, // 19: limitnode.LendLoanRes.extra:type_name -> limitnode.LendLoanRes.ExtraEntry
	32, // 20: limitnode.GatherStatusReq.auth:type_name -> common.Authorize
	37, // 21: limitnode.GatherStatusReq.status:type_name -> common.LendLoan_Status
	24, // 22: limitnode.GatherStatusReq.extra:type_name -> limitnode.GatherStatusReq.ExtraEntry
	34, // 23: limitnode.GatherStatusRes.rescode:type_name -> rescode.Code
	25, // 24: limitnode.GatherStatusRes.extra:type_name -> limitnode.GatherStatusRes.ExtraEntry
	32, // 25: limitnode.LendLoanStatusReq.auth:type_name -> common.Authorize
	37, // 26: limitnode.LendLoanStatusReq.status:type_name -> common.LendLoan_Status
	26, // 27: limitnode.LendLoanStatusReq.extra:type_name -> limitnode.LendLoanStatusReq.ExtraEntry
	34, // 28: limitnode.LendLoanStatusRes.rescode:type_name -> rescode.Code
	27, // 29: limitnode.LendLoanStatusRes.extra:type_name -> limitnode.LendLoanStatusRes.ExtraEntry
	28, // 30: limitnode.LlendNameReq.extra:type_name -> limitnode.LlendNameReq.ExtraEntry
	34, // 31: limitnode.LlendNameRes.rescode:type_name -> rescode.Code
	29, // 32: limitnode.LlendNameRes.extra:type_name -> limitnode.LlendNameRes.ExtraEntry
	38, // 33: limitnode.LlendMediaReq.media:type_name -> common.ShareImage
	30, // 34: limitnode.LlendMediaReq.extra:type_name -> limitnode.LlendMediaReq.ExtraEntry
	34, // 35: limitnode.LlendMediaRes.rescode:type_name -> rescode.Code
	31, // 36: limitnode.LlendMediaRes.extra:type_name -> limitnode.LlendMediaRes.ExtraEntry
	0,  // 37: limitnode.LoannodeService.AddLendLoan:input_type -> limitnode.AddLendLoanReq
	2,  // 38: limitnode.LoannodeService.CreateGather:input_type -> limitnode.CreateGatherReq
	4,  // 39: limitnode.LoannodeService.LendLoanGather:input_type -> limitnode.LendLoanGatherReq
	6,  // 40: limitnode.LoannodeService.LendLoan:input_type -> limitnode.LendLoanReq
	8,  // 41: limitnode.LoannodeService.GatherStatus:input_type -> limitnode.GatherStatusReq
	10, // 42: limitnode.LoannodeService.LendLoanStatus:input_type -> limitnode.LendLoanStatusReq
	12, // 43: limitnode.LoannodeService.LlendName:input_type -> limitnode.LlendNameReq
	14, // 44: limitnode.LoannodeService.LlendMedia:input_type -> limitnode.LlendMediaReq
	1,  // 45: limitnode.LoannodeService.AddLendLoan:output_type -> limitnode.AddLendLoanRes
	3,  // 46: limitnode.LoannodeService.CreateGather:output_type -> limitnode.CreateGatherRes
	5,  // 47: limitnode.LoannodeService.LendLoanGather:output_type -> limitnode.LendLoanGatherRes
	7,  // 48: limitnode.LoannodeService.LendLoan:output_type -> limitnode.LendLoanRes
	9,  // 49: limitnode.LoannodeService.GatherStatus:output_type -> limitnode.GatherStatusRes
	11, // 50: limitnode.LoannodeService.LendLoanStatus:output_type -> limitnode.LendLoanStatusRes
	13, // 51: limitnode.LoannodeService.LlendName:output_type -> limitnode.LlendNameRes
	15, // 52: limitnode.LoannodeService.LlendMedia:output_type -> limitnode.LlendMediaRes
	45, // [45:53] is the sub-list for method output_type
	37, // [37:45] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_loannode_proto_init() }
func file_loannode_proto_init() {
	if File_loannode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_loannode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLendLoanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLendLoanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGatherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGatherRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanGatherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanGatherRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatherStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatherStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LlendNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LlendNameRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LlendMediaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loannode_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LlendMediaRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loannode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_loannode_proto_goTypes,
		DependencyIndexes: file_loannode_proto_depIdxs,
		MessageInfos:      file_loannode_proto_msgTypes,
	}.Build()
	File_loannode_proto = out.File
	file_loannode_proto_rawDesc = nil
	file_loannode_proto_goTypes = nil
	file_loannode_proto_depIdxs = nil
}
