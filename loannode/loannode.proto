syntax  =  "proto3";
package limitnode;
import "rescode/rescode.proto";
import "common/common.proto";

option go_package="./loannode";

message AddLendLoanReq {
    common.Authorize            auth =  1;
    int64                       uid = 2;
    int64                       llid = 3;
    common.LendLoan             lendloan = 4;
    map<string,string>          extra = 5;
}

message AddLendLoanRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    map<string,string>          extra = 3;
}

message CreateGatherReq {
    common.Authorize            auth =  1;
    int64                       nd_uid = 2;
    int64                       an_uid = 3;
    int64                       expire = 4;
    string                      desc = 5;
    string                      remark = 6;
    map<string,string>          extra = 7;
}

message CreateGatherRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    int64                       llid = 3;
    map<string,string>          extra = 4;
}

message LendLoanGatherReq {
    common.Authorize            auth =  1;
    int64                       uid = 2;
    int32                       page = 3;
    int32                       size = 4;
    map<string,string>          extra = 5;
}

message LendLoanGatherRes {
    rescode.Code                    rescode = 1;
    string                          resmsg = 2;
    repeated common.Gather          gathers = 3;
    map<string,string>              extra = 4;
}

message LendLoanReq {
    common.Authorize            auth =  1;
    int64                       gid = 2;
    int64                       uid = 3;
    map<string,string>          extra = 4;
}

message LendLoanRes {
    rescode.Code                    rescode = 1;
    string                          resmsg = 2;
    common.LendLoanGather           gather = 3;
    repeated common.LendLoan        lendloans = 4;
    map<string,string>              extra = 5;
}

message GatherStatusReq {
    common.Authorize            auth =  1;
    int64                       id = 2;
    int64                       uid = 3;
    common.LendLoan_Status      status = 4;
    map<string,string>          extra = 5;
}

message GatherStatusRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    map<string,string>          extra = 3;
}

message LendLoanStatusReq {
    common.Authorize            auth =  1;
    int64                       id = 2;
    int64                       uid = 3;
    common.LendLoan_Status      status = 4;
    map<string,string>          extra = 5;
}

message LendLoanStatusRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    map<string,string>          extra = 3;
}

message LlendNameReq {
    common.Authorize            auth =  1;
    int64                       id = 2;
    int64                       uid = 3;
    string                      name = 4;
    map<string,string>          extra = 5;
}

message LlendNameRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    map<string,string>          extra = 3;
}

message LlendMediaReq {
    common.Authorize            auth =  1;
    int64                       id = 2;
    int64                       uid = 3;
    repeated common.ShareImage  media = 4;
    map<string,string>          extra = 5;
}

message LlendMediaRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    map<string,string>          extra = 3;
}

message LlendTotalReq {
    int64                       id = 1;
    int64                       uid = 2;
    int64                       total = 3;
    map<string,string>          extra = 4;
}

message LlendTotalRes {
    rescode.Code                rescode = 1;
    string                      resmsg = 2;
    map<string,string>          extra = 3;
}

service LoannodeService {
    // 添加借入借出
    rpc AddLendLoan(AddLendLoanReq) returns (AddLendLoanRes) {}
    // 创建聚集数据
    rpc CreateGather(CreateGatherReq) returns (CreateGatherRes) {}
    // 获取借入借出聚集记录
    rpc LendLoanGather(LendLoanGatherReq) returns (LendLoanGatherRes) {}
    // 获取借入借入借出记录
    rpc LendLoan(LendLoanReq) returns (LendLoanRes) {}
    // 修改借出借入聚集记录状态
    rpc GatherStatus(GatherStatusReq) returns (GatherStatusRes) {}
    // 修改借入借出状态
    rpc LendLoanStatus(LendLoanStatusReq) returns (LendLoanStatusRes) {}

    // 更新借入借出的name以及媒体数据
    rpc LlendName(LlendNameReq) returns (LlendNameRes) {}
    rpc LlendMedia(LlendMediaReq) returns (LlendMediaRes) {}
    rpc LlendTotal(LlendTotalReq) returns (LlendTotalReq) {}
}