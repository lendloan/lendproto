// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_NORMAL     Role = 0   // 普通用户
	Role_COOPERATOR Role = 1   // 企业用户
	Role_TEACHER    Role = 2   // 教师用户
	Role_STAFFOR    Role = 256 // 员工同事
	Role_SUPEROR    Role = 512 // 超级用户
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0:   "NORMAL",
		1:   "COOPERATOR",
		2:   "TEACHER",
		256: "STAFFOR",
		512: "SUPEROR",
	}
	Role_value = map[string]int32{
		"NORMAL":     0,
		"COOPERATOR": 1,
		"TEACHER":    2,
		"STAFFOR":    256,
		"SUPEROR":    512,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type VipLevel int32

const (
	VipLevel_vip_level_VIP_NOT     VipLevel = 0
	VipLevel_vip_level_VIP_1LEVEL  VipLevel = 1  // 1 month
	VipLevel_vip_level_VIP_2LEVEL  VipLevel = 2  // 6 month
	VipLevel_vip_level_VIP_3LEVEL  VipLevel = 3  // 1 year
	VipLevel_vip_level_VIP_16LEVEL VipLevel = 15 // forever
)

// Enum value maps for VipLevel.
var (
	VipLevel_name = map[int32]string{
		0:  "vip_level_VIP_NOT",
		1:  "vip_level_VIP_1LEVEL",
		2:  "vip_level_VIP_2LEVEL",
		3:  "vip_level_VIP_3LEVEL",
		15: "vip_level_VIP_16LEVEL",
	}
	VipLevel_value = map[string]int32{
		"vip_level_VIP_NOT":     0,
		"vip_level_VIP_1LEVEL":  1,
		"vip_level_VIP_2LEVEL":  2,
		"vip_level_VIP_3LEVEL":  3,
		"vip_level_VIP_16LEVEL": 15,
	}
)

func (x VipLevel) Enum() *VipLevel {
	p := new(VipLevel)
	*p = x
	return p
}

func (x VipLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (VipLevel) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x VipLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipLevel.Descriptor instead.
func (VipLevel) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type UserStatus int32

const (
	UserStatus_user_status_FROM_PLATOM  UserStatus = 0    // 平台帐号
	UserStatus_user_status_FROM_WECHAT  UserStatus = 1    // wechat帐号
	UserStatus_user_status_FROM_ALIPAY  UserStatus = 2    // alipay帐号
	UserStatus_user_status_FROM_INVALID UserStatus = 2049 // 无效用户
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0:    "user_status_FROM_PLATOM",
		1:    "user_status_FROM_WECHAT",
		2:    "user_status_FROM_ALIPAY",
		2049: "user_status_FROM_INVALID",
	}
	UserStatus_value = map[string]int32{
		"user_status_FROM_PLATOM":  0,
		"user_status_FROM_WECHAT":  1,
		"user_status_FROM_ALIPAY":  2,
		"user_status_FROM_INVALID": 2049,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type FromPlatom int32

const (
	FromPlatom_from_platom_FROM_LOCAL  FromPlatom = 0 // 自己平台
	FromPlatom_from_platom_FROM_WECHAT FromPlatom = 1 // 微信平台
	FromPlatom_from_platom_FROM_ALIPAY FromPlatom = 2 // 支付宝平台
)

// Enum value maps for FromPlatom.
var (
	FromPlatom_name = map[int32]string{
		0: "from_platom_FROM_LOCAL",
		1: "from_platom_FROM_WECHAT",
		2: "from_platom_FROM_ALIPAY",
	}
	FromPlatom_value = map[string]int32{
		"from_platom_FROM_LOCAL":  0,
		"from_platom_FROM_WECHAT": 1,
		"from_platom_FROM_ALIPAY": 2,
	}
)

func (x FromPlatom) Enum() *FromPlatom {
	p := new(FromPlatom)
	*p = x
	return p
}

func (x FromPlatom) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FromPlatom) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (FromPlatom) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x FromPlatom) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FromPlatom.Descriptor instead.
func (FromPlatom) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

type CertTyoe int32

const (
	CertTyoe_cert_tyoe_ID   CertTyoe = 0 // 身份证实名
	CertTyoe_cert_tyoe_FACE CertTyoe = 1 // 刷脸实名
)

// Enum value maps for CertTyoe.
var (
	CertTyoe_name = map[int32]string{
		0: "cert_tyoe_ID",
		1: "cert_tyoe_FACE",
	}
	CertTyoe_value = map[string]int32{
		"cert_tyoe_ID":   0,
		"cert_tyoe_FACE": 1,
	}
)

func (x CertTyoe) Enum() *CertTyoe {
	p := new(CertTyoe)
	*p = x
	return p
}

func (x CertTyoe) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CertTyoe) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (CertTyoe) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x CertTyoe) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CertTyoe.Descriptor instead.
func (CertTyoe) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type UpdateUserinfoField int32

const (
	UpdateUserinfoField_update_userinfo_field_USER_NONE     UpdateUserinfoField = 0 //
	UpdateUserinfoField_update_userinfo_field_USER_EMAIL    UpdateUserinfoField = 1 //  更新用户邮箱
	UpdateUserinfoField_update_userinfo_field_USER_PASS     UpdateUserinfoField = 2 //  更新用户密码
	UpdateUserinfoField_update_userinfo_field_USER_AVATAR   UpdateUserinfoField = 3 //  用户头像
	UpdateUserinfoField_update_userinfo_field_USER_NICKNAME UpdateUserinfoField = 4 //  用户名
	UpdateUserinfoField_update_userinfo_field_USER_SEX      UpdateUserinfoField = 5 //  用户性别
)

// Enum value maps for UpdateUserinfoField.
var (
	UpdateUserinfoField_name = map[int32]string{
		0: "update_userinfo_field_USER_NONE",
		1: "update_userinfo_field_USER_EMAIL",
		2: "update_userinfo_field_USER_PASS",
		3: "update_userinfo_field_USER_AVATAR",
		4: "update_userinfo_field_USER_NICKNAME",
		5: "update_userinfo_field_USER_SEX",
	}
	UpdateUserinfoField_value = map[string]int32{
		"update_userinfo_field_USER_NONE":     0,
		"update_userinfo_field_USER_EMAIL":    1,
		"update_userinfo_field_USER_PASS":     2,
		"update_userinfo_field_USER_AVATAR":   3,
		"update_userinfo_field_USER_NICKNAME": 4,
		"update_userinfo_field_USER_SEX":      5,
	}
)

func (x UpdateUserinfoField) Enum() *UpdateUserinfoField {
	p := new(UpdateUserinfoField)
	*p = x
	return p
}

func (x UpdateUserinfoField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateUserinfoField) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (UpdateUserinfoField) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x UpdateUserinfoField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateUserinfoField.Descriptor instead.
func (UpdateUserinfoField) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

// 日志类型,日志类型并不重复，所有采用对应的整型
type LogType int32

const (
	LogType_log_type_NONE_USER    LogType = 0  //
	LogType_log_type_CREATE_USER  LogType = 1  // 用户创建
	LogType_log_type_UPDATE_USER  LogType = 2  // 用户更新
	LogType_log_type_LOGIN_USER   LogType = 3  // 用户登录
	LogType_log_type_LOGOUT_USER  LogType = 4  // 用户退出
	LogType_log_type_SUBMIT_CERT  LogType = 5  // 提交实名
	LogType_log_type_CANCEL_CERT  LogType = 6  // 取消实名
	LogType_log_type_CERT_FAIL    LogType = 7  // 实名失败
	LogType_log_type_CERT_SUCCESS LogType = 8  // 实名成功
	LogType_log_type_VIP_LEVELUP  LogType = 9  // 升级vip
	LogType_log_type_COIN_APPEND  LogType = 10 // 增加coin
	LogType_log_type_COIN_USED    LogType = 11 // 减少coin
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0:  "log_type_NONE_USER",
		1:  "log_type_CREATE_USER",
		2:  "log_type_UPDATE_USER",
		3:  "log_type_LOGIN_USER",
		4:  "log_type_LOGOUT_USER",
		5:  "log_type_SUBMIT_CERT",
		6:  "log_type_CANCEL_CERT",
		7:  "log_type_CERT_FAIL",
		8:  "log_type_CERT_SUCCESS",
		9:  "log_type_VIP_LEVELUP",
		10: "log_type_COIN_APPEND",
		11: "log_type_COIN_USED",
	}
	LogType_value = map[string]int32{
		"log_type_NONE_USER":    0,
		"log_type_CREATE_USER":  1,
		"log_type_UPDATE_USER":  2,
		"log_type_LOGIN_USER":   3,
		"log_type_LOGOUT_USER":  4,
		"log_type_SUBMIT_CERT":  5,
		"log_type_CANCEL_CERT":  6,
		"log_type_CERT_FAIL":    7,
		"log_type_CERT_SUCCESS": 8,
		"log_type_VIP_LEVELUP":  9,
		"log_type_COIN_APPEND":  10,
		"log_type_COIN_USED":    11,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

type VipPayStyle int32

const (
	VipPayStyle_NONE    VipPayStyle = 0
	VipPayStyle_WECHART VipPayStyle = 1 // 微信充值
	VipPayStyle_ALIPAY  VipPayStyle = 2 // 支付宝充值
)

// Enum value maps for VipPayStyle.
var (
	VipPayStyle_name = map[int32]string{
		0: "NONE",
		1: "WECHART",
		2: "ALIPAY",
	}
	VipPayStyle_value = map[string]int32{
		"NONE":    0,
		"WECHART": 1,
		"ALIPAY":  2,
	}
)

func (x VipPayStyle) Enum() *VipPayStyle {
	p := new(VipPayStyle)
	*p = x
	return p
}

func (x VipPayStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipPayStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[7].Descriptor()
}

func (VipPayStyle) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[7]
}

func (x VipPayStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipPayStyle.Descriptor instead.
func (VipPayStyle) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

type Authorize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Extra map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Authorize) Reset() {
	*x = Authorize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authorize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authorize) ProtoMessage() {}

func (x *Authorize) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authorize.ProtoReflect.Descriptor instead.
func (*Authorize) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Authorize) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Authorize) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Authorize) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra map[string]string `protobuf:"bytes,1,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra map[string]string `protobuf:"bytes,1,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateUserinfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64               `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Field    UpdateUserinfoField `protobuf:"varint,2,opt,name=field,proto3,enum=common.UpdateUserinfoField" json:"field,omitempty"`
	NewValue string              `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	OldValue string              `protobuf:"bytes,4,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	Extra    map[string]string   `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateUserinfoItem) Reset() {
	*x = UpdateUserinfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserinfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserinfoItem) ProtoMessage() {}

func (x *UpdateUserinfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserinfoItem.ProtoReflect.Descriptor instead.
func (*UpdateUserinfoItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserinfoItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateUserinfoItem) GetField() UpdateUserinfoField {
	if x != nil {
		return x.Field
	}
	return UpdateUserinfoField_update_userinfo_field_USER_NONE
}

func (x *UpdateUserinfoItem) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *UpdateUserinfoItem) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *UpdateUserinfoItem) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex      int32  `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province string `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Vip      int64  `protobuf:"varint,7,opt,name=vip,proto3" json:"vip,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfo) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

type WechatUserinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid     string   `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int32    `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,7,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,8,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,9,opt,name=unionid,proto3" json:"unionid,omitempty"`
}

func (x *WechatUserinfo) Reset() {
	*x = WechatUserinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserinfo) ProtoMessage() {}

func (x *WechatUserinfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserinfo.ProtoReflect.Descriptor instead.
func (*WechatUserinfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *WechatUserinfo) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatUserinfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatUserinfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WechatUserinfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WechatUserinfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatUserinfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WechatUserinfo) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *WechatUserinfo) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WechatUserinfo) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

type AlipayUserinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Avatar   string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Province string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	City     string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	NickName string `protobuf:"bytes,7,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Gender   string `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *AlipayUserinfo) Reset() {
	*x = AlipayUserinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlipayUserinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlipayUserinfo) ProtoMessage() {}

func (x *AlipayUserinfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlipayUserinfo.ProtoReflect.Descriptor instead.
func (*AlipayUserinfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *AlipayUserinfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AlipayUserinfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AlipayUserinfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AlipayUserinfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AlipayUserinfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AlipayUserinfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AlipayUserinfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AlipayUserinfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

type BaiduConcept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level1 string `protobuf:"bytes,1,opt,name=level1,proto3" json:"level1,omitempty"` // 一级概
	Level2 string `protobuf:"bytes,2,opt,name=level2,proto3" json:"level2,omitempty"` // 二级概念
}

func (x *BaiduConcept) Reset() {
	*x = BaiduConcept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduConcept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduConcept) ProtoMessage() {}

func (x *BaiduConcept) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduConcept.ProtoReflect.Descriptor instead.
func (*BaiduConcept) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *BaiduConcept) GetLevel1() string {
	if x != nil {
		return x.Level1
	}
	return ""
}

func (x *BaiduConcept) GetLevel2() string {
	if x != nil {
		return x.Level2
	}
	return ""
}

type BaiduEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          string        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                   // 用于对关联结果进行标识
	Confidence      string        `protobuf:"bytes,2,opt,name=confidence,proto3" json:"confidence,omitempty"`           // 实体关联至该@id的置信度
	AnnoType        string        `protobuf:"bytes,3,opt,name=annoType,proto3" json:"annoType,omitempty"`               // 标注类型：Instance | Category | Property
	Concept         *BaiduConcept `protobuf:"bytes,4,opt,name=concept,proto3" json:"concept,omitempty"`                 // 概念标注结果
	BdbkKgId        string        `protobuf:"bytes,5,opt,name=bdbkKgId,proto3" json:"bdbkKgId,omitempty"`               // 百科newid
	MainReqRankList string        `protobuf:"bytes,6,opt,name=mainReqRankList,proto3" json:"mainReqRankList,omitempty"` // 主需求实体，列出所有候选实体信息，根据热度从高到低排列
	BdbkUrl         string        `protobuf:"bytes,7,opt,name=bdbkUrl,proto3" json:"bdbkUrl,omitempty"`                 // 百科url
	Offset          string        `protobuf:"bytes,8,opt,name=offset,proto3" json:"offset,omitempty"`
	Desc            string        `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`        // 实体的简介
	Mention         string        `protobuf:"bytes,10,opt,name=mention,proto3" json:"mention,omitempty"` // 实体名
}

func (x *BaiduEntity) Reset() {
	*x = BaiduEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduEntity) ProtoMessage() {}

func (x *BaiduEntity) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduEntity.ProtoReflect.Descriptor instead.
func (*BaiduEntity) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *BaiduEntity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BaiduEntity) GetConfidence() string {
	if x != nil {
		return x.Confidence
	}
	return ""
}

func (x *BaiduEntity) GetAnnoType() string {
	if x != nil {
		return x.AnnoType
	}
	return ""
}

func (x *BaiduEntity) GetConcept() *BaiduConcept {
	if x != nil {
		return x.Concept
	}
	return nil
}

func (x *BaiduEntity) GetBdbkKgId() string {
	if x != nil {
		return x.BdbkKgId
	}
	return ""
}

func (x *BaiduEntity) GetMainReqRankList() string {
	if x != nil {
		return x.MainReqRankList
	}
	return ""
}

func (x *BaiduEntity) GetBdbkUrl() string {
	if x != nil {
		return x.BdbkUrl
	}
	return ""
}

func (x *BaiduEntity) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *BaiduEntity) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BaiduEntity) GetMention() string {
	if x != nil {
		return x.Mention
	}
	return ""
}

type BaiduWordLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top    int32 `protobuf:"varint,1,opt,name=top,proto3" json:"top,omitempty"`
	Left   int32 `protobuf:"varint,2,opt,name=left,proto3" json:"left,omitempty"`
	Width  int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *BaiduWordLocation) Reset() {
	*x = BaiduWordLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduWordLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduWordLocation) ProtoMessage() {}

func (x *BaiduWordLocation) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduWordLocation.ProtoReflect.Descriptor instead.
func (*BaiduWordLocation) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *BaiduWordLocation) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *BaiduWordLocation) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *BaiduWordLocation) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BaiduWordLocation) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type BaiduLineProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaiduLineProbability) Reset() {
	*x = BaiduLineProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduLineProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduLineProbability) ProtoMessage() {}

func (x *BaiduLineProbability) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduLineProbability.ProtoReflect.Descriptor instead.
func (*BaiduLineProbability) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

type BaiduWordsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location    *BaiduWordLocation    `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Probability *BaiduLineProbability `protobuf:"bytes,2,opt,name=probability,proto3" json:"probability,omitempty"`
	Word        string                `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *BaiduWordsItem) Reset() {
	*x = BaiduWordsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduWordsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduWordsItem) ProtoMessage() {}

func (x *BaiduWordsItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduWordsItem.ProtoReflect.Descriptor instead.
func (*BaiduWordsItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *BaiduWordsItem) GetLocation() *BaiduWordLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *BaiduWordsItem) GetProbability() *BaiduLineProbability {
	if x != nil {
		return x.Probability
	}
	return nil
}

func (x *BaiduWordsItem) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type BaiduResultItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordsType string          `protobuf:"bytes,1,opt,name=words_type,json=wordsType,proto3" json:"words_type,omitempty"`
	Word      *BaiduWordsItem `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *BaiduResultItem) Reset() {
	*x = BaiduResultItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduResultItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduResultItem) ProtoMessage() {}

func (x *BaiduResultItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduResultItem.ProtoReflect.Descriptor instead.
func (*BaiduResultItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (x *BaiduResultItem) GetWordsType() string {
	if x != nil {
		return x.WordsType
	}
	return ""
}

func (x *BaiduResultItem) GetWord() *BaiduWordsItem {
	if x != nil {
		return x.Word
	}
	return nil
}

type BaiduDocAnalysis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId        int64              `protobuf:"varint,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	ImgDirection int32              `protobuf:"varint,2,opt,name=img_direction,json=imgDirection,proto3" json:"img_direction,omitempty"`
	ResultsNum   int32              `protobuf:"varint,3,opt,name=results_num,json=resultsNum,proto3" json:"results_num,omitempty"`
	LayoutsNum   int32              `protobuf:"varint,4,opt,name=layouts_num,json=layoutsNum,proto3" json:"layouts_num,omitempty"`
	Results      []*BaiduResultItem `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BaiduDocAnalysis) Reset() {
	*x = BaiduDocAnalysis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduDocAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduDocAnalysis) ProtoMessage() {}

func (x *BaiduDocAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduDocAnalysis.ProtoReflect.Descriptor instead.
func (*BaiduDocAnalysis) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *BaiduDocAnalysis) GetLogId() int64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

func (x *BaiduDocAnalysis) GetImgDirection() int32 {
	if x != nil {
		return x.ImgDirection
	}
	return 0
}

func (x *BaiduDocAnalysis) GetResultsNum() int32 {
	if x != nil {
		return x.ResultsNum
	}
	return 0
}

func (x *BaiduDocAnalysis) GetLayoutsNum() int32 {
	if x != nil {
		return x.LayoutsNum
	}
	return 0
}

func (x *BaiduDocAnalysis) GetResults() []*BaiduResultItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type BaiduIdentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Iid      string            `protobuf:"bytes,2,opt,name=iid,proto3" json:"iid,omitempty"`
	Sign     string            `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Status   string            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Result   *BaiduDocAnalysis `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	CreateAt string            `protobuf:"bytes,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt string            `protobuf:"bytes,7,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Reward   float64           `protobuf:"fixed64,8,opt,name=reward,proto3" json:"reward,omitempty"`
	ImageUrl string            `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *BaiduIdentItem) Reset() {
	*x = BaiduIdentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduIdentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduIdentItem) ProtoMessage() {}

func (x *BaiduIdentItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduIdentItem.ProtoReflect.Descriptor instead.
func (*BaiduIdentItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *BaiduIdentItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BaiduIdentItem) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *BaiduIdentItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *BaiduIdentItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BaiduIdentItem) GetResult() *BaiduDocAnalysis {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BaiduIdentItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *BaiduIdentItem) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *BaiduIdentItem) GetReward() float64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *BaiduIdentItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type PersonCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Idname     string            `protobuf:"bytes,2,opt,name=idname,proto3" json:"idname,omitempty"`
	Idnum      string            `protobuf:"bytes,3,opt,name=idnum,proto3" json:"idnum,omitempty"`
	ImageUp    string            `protobuf:"bytes,4,opt,name=image_up,json=imageUp,proto3" json:"image_up,omitempty"`
	ImageDown  string            `protobuf:"bytes,5,opt,name=image_down,json=imageDown,proto3" json:"image_down,omitempty"`
	ImageFace  string            `protobuf:"bytes,6,opt,name=image_face,json=imageFace,proto3" json:"image_face,omitempty"`
	CertType   int32             `protobuf:"varint,7,opt,name=cert_type,json=certType,proto3" json:"cert_type,omitempty"`
	Status     string            `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Info       string            `protobuf:"bytes,9,opt,name=info,proto3" json:"info,omitempty"`
	Mark       string            `protobuf:"bytes,10,opt,name=mark,proto3" json:"mark,omitempty"`
	ApprovId   int64             `protobuf:"varint,11,opt,name=approv_id,json=approvId,proto3" json:"approv_id,omitempty"`
	ApprovName string            `protobuf:"bytes,12,opt,name=approv_name,json=approvName,proto3" json:"approv_name,omitempty"`
	SubmitAt   int64             `protobuf:"varint,13,opt,name=submit_at,json=submitAt,proto3" json:"submit_at,omitempty"`
	CreateAt   int64             `protobuf:"varint,14,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt   int64             `protobuf:"varint,15,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Data1      string            `protobuf:"bytes,16,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2      string            `protobuf:"bytes,17,opt,name=data2,proto3" json:"data2,omitempty"`
	Extra      map[string]string `protobuf:"bytes,18,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PersonCert) Reset() {
	*x = PersonCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonCert) ProtoMessage() {}

func (x *PersonCert) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonCert.ProtoReflect.Descriptor instead.
func (*PersonCert) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *PersonCert) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PersonCert) GetIdname() string {
	if x != nil {
		return x.Idname
	}
	return ""
}

func (x *PersonCert) GetIdnum() string {
	if x != nil {
		return x.Idnum
	}
	return ""
}

func (x *PersonCert) GetImageUp() string {
	if x != nil {
		return x.ImageUp
	}
	return ""
}

func (x *PersonCert) GetImageDown() string {
	if x != nil {
		return x.ImageDown
	}
	return ""
}

func (x *PersonCert) GetImageFace() string {
	if x != nil {
		return x.ImageFace
	}
	return ""
}

func (x *PersonCert) GetCertType() int32 {
	if x != nil {
		return x.CertType
	}
	return 0
}

func (x *PersonCert) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PersonCert) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *PersonCert) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *PersonCert) GetApprovId() int64 {
	if x != nil {
		return x.ApprovId
	}
	return 0
}

func (x *PersonCert) GetApprovName() string {
	if x != nil {
		return x.ApprovName
	}
	return ""
}

func (x *PersonCert) GetSubmitAt() int64 {
	if x != nil {
		return x.SubmitAt
	}
	return 0
}

func (x *PersonCert) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *PersonCert) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *PersonCert) GetData1() string {
	if x != nil {
		return x.Data1
	}
	return ""
}

func (x *PersonCert) GetData2() string {
	if x != nil {
		return x.Data2
	}
	return ""
}

func (x *PersonCert) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type BaiduIdcardIdent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageStatus int32             `protobuf:"varint,1,opt,name=image_status,json=imageStatus,proto3" json:"image_status,omitempty"` // 0:成功  1:失败
	Idname      string            `protobuf:"bytes,2,opt,name=idname,proto3" json:"idname,omitempty"`
	Idnum       string            `protobuf:"bytes,3,opt,name=idnum,proto3" json:"idnum,omitempty"`
	Address     string            `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Brithday    string            `protobuf:"bytes,5,opt,name=brithday,proto3" json:"brithday,omitempty"`
	Sex         string            `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex,omitempty"`
	Ethnic      string            `protobuf:"bytes,7,opt,name=ethnic,proto3" json:"ethnic,omitempty"` // 民族
	Extra       map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BaiduIdcardIdent) Reset() {
	*x = BaiduIdcardIdent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaiduIdcardIdent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaiduIdcardIdent) ProtoMessage() {}

func (x *BaiduIdcardIdent) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaiduIdcardIdent.ProtoReflect.Descriptor instead.
func (*BaiduIdcardIdent) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *BaiduIdcardIdent) GetImageStatus() int32 {
	if x != nil {
		return x.ImageStatus
	}
	return 0
}

func (x *BaiduIdcardIdent) GetIdname() string {
	if x != nil {
		return x.Idname
	}
	return ""
}

func (x *BaiduIdcardIdent) GetIdnum() string {
	if x != nil {
		return x.Idnum
	}
	return ""
}

func (x *BaiduIdcardIdent) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BaiduIdcardIdent) GetBrithday() string {
	if x != nil {
		return x.Brithday
	}
	return ""
}

func (x *BaiduIdcardIdent) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *BaiduIdcardIdent) GetEthnic() string {
	if x != nil {
		return x.Ethnic
	}
	return ""
}

func (x *BaiduIdcardIdent) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// 用户日志
type UserLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid      int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	LogType  int32  `protobuf:"varint,3,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	LogInfo  string `protobuf:"bytes,4,opt,name=log_info,json=logInfo,proto3" json:"log_info,omitempty"`
	CreateAt string `protobuf:"bytes,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *UserLog) Reset() {
	*x = UserLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLog) ProtoMessage() {}

func (x *UserLog) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLog.ProtoReflect.Descriptor instead.
func (*UserLog) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *UserLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLog) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserLog) GetLogType() int32 {
	if x != nil {
		return x.LogType
	}
	return 0
}

func (x *UserLog) GetLogInfo() string {
	if x != nil {
		return x.LogInfo
	}
	return ""
}

func (x *UserLog) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type CronItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval  string            `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	StartAt   string            `protobuf:"bytes,2,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	Repeadted bool              `protobuf:"varint,3,opt,name=repeadted,proto3" json:"repeadted,omitempty"`
	Func      string            `protobuf:"bytes,4,opt,name=func,proto3" json:"func,omitempty"`
	Mutitask  bool              `protobuf:"varint,5,opt,name=mutitask,proto3" json:"mutitask,omitempty"`
	Info      string            `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
	Version   string            `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Extra     map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CronItem) Reset() {
	*x = CronItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronItem) ProtoMessage() {}

func (x *CronItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronItem.ProtoReflect.Descriptor instead.
func (*CronItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *CronItem) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *CronItem) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *CronItem) GetRepeadted() bool {
	if x != nil {
		return x.Repeadted
	}
	return false
}

func (x *CronItem) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *CronItem) GetMutitask() bool {
	if x != nil {
		return x.Mutitask
	}
	return false
}

func (x *CronItem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *CronItem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CronItem) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type PkgItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Admin    string `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
	Flag     int32  `protobuf:"varint,5,opt,name=flag,proto3" json:"flag,omitempty"`
	CreateAt string `protobuf:"bytes,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *PkgItem) Reset() {
	*x = PkgItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkgItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgItem) ProtoMessage() {}

func (x *PkgItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgItem.ProtoReflect.Descriptor instead.
func (*PkgItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{19}
}

func (x *PkgItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PkgItem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PkgItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PkgItem) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *PkgItem) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *PkgItem) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type VipProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level     int64  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Genre     int64  `protobuf:"varint,3,opt,name=genre,proto3" json:"genre,omitempty"`
	Amount    int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CostPrice int64  `protobuf:"varint,5,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	Score     int64  `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	Info      string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
	Status    int64  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Invalid   int64  `protobuf:"varint,9,opt,name=invalid,proto3" json:"invalid,omitempty"`
	Creator   string `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateAt  string `protobuf:"bytes,11,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Desc      string `protobuf:"bytes,12,opt,name=desc,proto3" json:"desc,omitempty"`
	Func      string `protobuf:"bytes,13,opt,name=func,proto3" json:"func,omitempty"`
	Extra     string `protobuf:"bytes,14,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *VipProduct) Reset() {
	*x = VipProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipProduct) ProtoMessage() {}

func (x *VipProduct) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipProduct.ProtoReflect.Descriptor instead.
func (*VipProduct) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20}
}

func (x *VipProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipProduct) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *VipProduct) GetGenre() int64 {
	if x != nil {
		return x.Genre
	}
	return 0
}

func (x *VipProduct) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *VipProduct) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *VipProduct) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *VipProduct) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *VipProduct) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipProduct) GetInvalid() int64 {
	if x != nil {
		return x.Invalid
	}
	return 0
}

func (x *VipProduct) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *VipProduct) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *VipProduct) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *VipProduct) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *VipProduct) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type VipDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc     string            `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	CreateAt string            `protobuf:"bytes,3,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Extra    map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VipDesc) Reset() {
	*x = VipDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipDesc) ProtoMessage() {}

func (x *VipDesc) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipDesc.ProtoReflect.Descriptor instead.
func (*VipDesc) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21}
}

func (x *VipDesc) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipDesc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *VipDesc) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *VipDesc) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type VipOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level    int64  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Genre    int64  `protobuf:"varint,3,opt,name=genre,proto3" json:"genre,omitempty"`
	Uid      int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	TradeNo  string `protobuf:"bytes,5,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	CodeUrl  string `protobuf:"bytes,6,opt,name=code_url,json=codeUrl,proto3" json:"code_url,omitempty"`
	Amount   int64  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Status   int64  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	PayStyle int64  `protobuf:"varint,9,opt,name=pay_style,json=payStyle,proto3" json:"pay_style,omitempty"`
	Info     string `protobuf:"bytes,10,opt,name=info,proto3" json:"info,omitempty"`
	Extra    string `protobuf:"bytes,11,opt,name=extra,proto3" json:"extra,omitempty"`
	CreateAt string `protobuf:"bytes,12,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt string `protobuf:"bytes,13,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	Openid   string `protobuf:"bytes,14,opt,name=openid,proto3" json:"openid,omitempty"`
	TransId  string `protobuf:"bytes,15,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	Desc     string `protobuf:"bytes,16,opt,name=desc,proto3" json:"desc,omitempty"`
	Score    int64  `protobuf:"varint,17,opt,name=score,proto3" json:"score,omitempty"`
	Invalid  int64  `protobuf:"varint,18,opt,name=invalid,proto3" json:"invalid,omitempty"`
}

func (x *VipOrder) Reset() {
	*x = VipOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipOrder) ProtoMessage() {}

func (x *VipOrder) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipOrder.ProtoReflect.Descriptor instead.
func (*VipOrder) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22}
}

func (x *VipOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipOrder) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *VipOrder) GetGenre() int64 {
	if x != nil {
		return x.Genre
	}
	return 0
}

func (x *VipOrder) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *VipOrder) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *VipOrder) GetCodeUrl() string {
	if x != nil {
		return x.CodeUrl
	}
	return ""
}

func (x *VipOrder) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *VipOrder) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipOrder) GetPayStyle() int64 {
	if x != nil {
		return x.PayStyle
	}
	return 0
}

func (x *VipOrder) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *VipOrder) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *VipOrder) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *VipOrder) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *VipOrder) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *VipOrder) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *VipOrder) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *VipOrder) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *VipOrder) GetInvalid() int64 {
	if x != nil {
		return x.Invalid
	}
	return 0
}

type VipPayCbRe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalType   string `protobuf:"bytes,1,opt,name=original_type,json=originalType,proto3" json:"original_type,omitempty"`
	Algorithm      string `protobuf:"bytes,2,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Ciphertext     string `protobuf:"bytes,3,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	AssociatedData string `protobuf:"bytes,4,opt,name=associated_data,json=associatedData,proto3" json:"associated_data,omitempty"`
	Nonce          string `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *VipPayCbRe) Reset() {
	*x = VipPayCbRe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipPayCbRe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipPayCbRe) ProtoMessage() {}

func (x *VipPayCbRe) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipPayCbRe.ProtoReflect.Descriptor instead.
func (*VipPayCbRe) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23}
}

func (x *VipPayCbRe) GetOriginalType() string {
	if x != nil {
		return x.OriginalType
	}
	return ""
}

func (x *VipPayCbRe) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *VipPayCbRe) GetCiphertext() string {
	if x != nil {
		return x.Ciphertext
	}
	return ""
}

func (x *VipPayCbRe) GetAssociatedData() string {
	if x != nil {
		return x.AssociatedData
	}
	return ""
}

func (x *VipPayCbRe) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type VipPayCb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime   string      `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ResourceType string      `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	EventType    string      `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Summary      string      `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`
	Resource     *VipPayCbRe `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *VipPayCb) Reset() {
	*x = VipPayCb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipPayCb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipPayCb) ProtoMessage() {}

func (x *VipPayCb) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipPayCb.ProtoReflect.Descriptor instead.
func (*VipPayCb) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{24}
}

func (x *VipPayCb) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VipPayCb) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *VipPayCb) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *VipPayCb) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *VipPayCb) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *VipPayCb) GetResource() *VipPayCbRe {
	if x != nil {
		return x.Resource
	}
	return nil
}

type UserScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Score    int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	CreateAt string `protobuf:"bytes,3,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt string `protobuf:"bytes,4,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
}

func (x *UserScore) Reset() {
	*x = UserScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserScore) ProtoMessage() {}

func (x *UserScore) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserScore.ProtoReflect.Descriptor instead.
func (*UserScore) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{25}
}

func (x *UserScore) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserScore) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UserScore) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *UserScore) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

type UserVip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Vip      int64  `protobuf:"varint,2,opt,name=vip,proto3" json:"vip,omitempty"`
	Invalid  int64  `protobuf:"varint,3,opt,name=invalid,proto3" json:"invalid,omitempty"`
	CreateAt string `protobuf:"bytes,4,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt string `protobuf:"bytes,5,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	VipAt    int64  `protobuf:"varint,6,opt,name=vip_at,json=vipAt,proto3" json:"vip_at,omitempty"`
}

func (x *UserVip) Reset() {
	*x = UserVip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVip) ProtoMessage() {}

func (x *UserVip) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVip.ProtoReflect.Descriptor instead.
func (*UserVip) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{26}
}

func (x *UserVip) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserVip) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *UserVip) GetInvalid() int64 {
	if x != nil {
		return x.Invalid
	}
	return 0
}

func (x *UserVip) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *UserVip) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *UserVip) GetVipAt() int64 {
	if x != nil {
		return x.VipAt
	}
	return 0
}

type FootLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SvrName    string            `protobuf:"bytes,2,opt,name=svr_name,json=svrName,proto3" json:"svr_name,omitempty"`
	CallSvr    string            `protobuf:"bytes,3,opt,name=call_svr,json=callSvr,proto3" json:"call_svr,omitempty"`
	CallMethod string            `protobuf:"bytes,4,opt,name=call_method,json=callMethod,proto3" json:"call_method,omitempty"`
	Timeout    int64             `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Remote     string            `protobuf:"bytes,6,opt,name=remote,proto3" json:"remote,omitempty"`
	Rescode    int64             `protobuf:"varint,7,opt,name=rescode,proto3" json:"rescode,omitempty"`
	SvrType    string            `protobuf:"bytes,8,opt,name=svr_type,json=svrType,proto3" json:"svr_type,omitempty"`
	CreateAt   int64             `protobuf:"varint,9,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Extra      map[string]string `protobuf:"bytes,10,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FootLog) Reset() {
	*x = FootLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootLog) ProtoMessage() {}

func (x *FootLog) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootLog.ProtoReflect.Descriptor instead.
func (*FootLog) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{27}
}

func (x *FootLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FootLog) GetSvrName() string {
	if x != nil {
		return x.SvrName
	}
	return ""
}

func (x *FootLog) GetCallSvr() string {
	if x != nil {
		return x.CallSvr
	}
	return ""
}

func (x *FootLog) GetCallMethod() string {
	if x != nil {
		return x.CallMethod
	}
	return ""
}

func (x *FootLog) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *FootLog) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *FootLog) GetRescode() int64 {
	if x != nil {
		return x.Rescode
	}
	return 0
}

func (x *FootLog) GetSvrType() string {
	if x != nil {
		return x.SvrType
	}
	return ""
}

func (x *FootLog) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *FootLog) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type AlipayCb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: form:"trade_no"
	TradeNo string `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"` // 支付宝交易号
	// @inject_tag: form:"app_id"
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// @inject_tag: form:"out_trade_no"
	OutTradeNo string `protobuf:"bytes,3,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"` // 商户订单号
	// @inject_tag: form:"buyer_id"
	BuyerId string `protobuf:"bytes,4,opt,name=buyer_id,json=buyerId,proto3" json:"buyer_id,omitempty"` // 买房用户唯一id
	// @inject_tag: form:"buyer_logon_id"
	BuyerLogonId string `protobuf:"bytes,5,opt,name=buyer_logon_id,json=buyerLogonId,proto3" json:"buyer_logon_id,omitempty"` // 买方支付宝账号
	// @inject_tag: form:"seller_id"
	SellerId string `protobuf:"bytes,6,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"` // 卖方用户唯一Id
	// @inject_tag: form:"trade_status"
	TradeStatus string `protobuf:"bytes,7,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"` // 交易状态, WAIT_BUYER_PAY(创建),TRADE_CLOSED(关闭),TRADE_SUCCESS(成功),TRADE_FINISHED(结束)
	// @inject_tag: form:"notify_type"
	NotifyType string `protobuf:"bytes,8,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"`
	// @inject_tag: form:"notify_id"
	NotifyId string `protobuf:"bytes,9,opt,name=notify_id,json=notifyId,proto3" json:"notify_id,omitempty"`
}

func (x *AlipayCb) Reset() {
	*x = AlipayCb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlipayCb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlipayCb) ProtoMessage() {}

func (x *AlipayCb) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlipayCb.ProtoReflect.Descriptor instead.
func (*AlipayCb) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{28}
}

func (x *AlipayCb) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *AlipayCb) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AlipayCb) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *AlipayCb) GetBuyerId() string {
	if x != nil {
		return x.BuyerId
	}
	return ""
}

func (x *AlipayCb) GetBuyerLogonId() string {
	if x != nil {
		return x.BuyerLogonId
	}
	return ""
}

func (x *AlipayCb) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *AlipayCb) GetTradeStatus() string {
	if x != nil {
		return x.TradeStatus
	}
	return ""
}

func (x *AlipayCb) GetNotifyType() string {
	if x != nil {
		return x.NotifyType
	}
	return ""
}

func (x *AlipayCb) GetNotifyId() string {
	if x != nil {
		return x.NotifyId
	}
	return ""
}

type LendLoanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	NdUid    int64             `protobuf:"varint,2,opt,name=NdUid,proto3" json:"NdUid,omitempty"`      //	借入的用户uid
	AnUid    int64             `protobuf:"varint,3,opt,name=AnUid,proto3" json:"AnUid,omitempty"`      //	借出的用户uid
	GUig     string            `protobuf:"bytes,4,opt,name=GUig,proto3" json:"GUig,omitempty"`         //  商品ID(如果有的话)
	Name     string            `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`         //	商品名称
	Images   string            `protobuf:"bytes,6,opt,name=Images,proto3" json:"Images,omitempty"`     //	商品图像
	Location string            `protobuf:"bytes,7,opt,name=Location,proto3" json:"Location,omitempty"` //	借入借出位置
	NdIp     string            `protobuf:"bytes,8,opt,name=NdIp,proto3" json:"NdIp,omitempty"`         //	借入ip地址
	AnIp     string            `protobuf:"bytes,9,opt,name=AnIp,proto3" json:"AnIp,omitempty"`         //	借出ip地址
	NdDvid   string            `protobuf:"bytes,10,opt,name=NdDvid,proto3" json:"NdDvid,omitempty"`    //	借入设备id
	AnDvid   string            `protobuf:"bytes,11,opt,name=AnDvid,proto3" json:"AnDvid,omitempty"`    //	借出设备id
	Status   int64             `protobuf:"varint,12,opt,name=Status,proto3" json:"Status,omitempty"`   //	状态，在借、已还、取消
	Expire   int64             `protobuf:"varint,13,opt,name=Expire,proto3" json:"Expire,omitempty"`   //	到期时间
	CreateAt int64             `protobuf:"varint,14,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	UpdateAt int64             `protobuf:"varint,15,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
	Extra    map[string]string `protobuf:"bytes,16,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanItem) Reset() {
	*x = LendLoanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanItem) ProtoMessage() {}

func (x *LendLoanItem) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanItem.ProtoReflect.Descriptor instead.
func (*LendLoanItem) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{29}
}

func (x *LendLoanItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LendLoanItem) GetNdUid() int64 {
	if x != nil {
		return x.NdUid
	}
	return 0
}

func (x *LendLoanItem) GetAnUid() int64 {
	if x != nil {
		return x.AnUid
	}
	return 0
}

func (x *LendLoanItem) GetGUig() string {
	if x != nil {
		return x.GUig
	}
	return ""
}

func (x *LendLoanItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LendLoanItem) GetImages() string {
	if x != nil {
		return x.Images
	}
	return ""
}

func (x *LendLoanItem) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *LendLoanItem) GetNdIp() string {
	if x != nil {
		return x.NdIp
	}
	return ""
}

func (x *LendLoanItem) GetAnIp() string {
	if x != nil {
		return x.AnIp
	}
	return ""
}

func (x *LendLoanItem) GetNdDvid() string {
	if x != nil {
		return x.NdDvid
	}
	return ""
}

func (x *LendLoanItem) GetAnDvid() string {
	if x != nil {
		return x.AnDvid
	}
	return ""
}

func (x *LendLoanItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LendLoanItem) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *LendLoanItem) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *LendLoanItem) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *LendLoanItem) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LendLoanGather struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	NdUid       int64             `protobuf:"varint,2,opt,name=NdUid,proto3" json:"NdUid,omitempty"`            // 借入的用户uid
	AnUid       int64             `protobuf:"varint,3,opt,name=AnUid,proto3" json:"AnUid,omitempty"`            // 借出的用户uid
	LlIds       string            `protobuf:"bytes,4,opt,name=LlIds,proto3" json:"LlIds,omitempty"`             // 借出借入的id列表，来自LendLoanTotal
	Status      int64             `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`          // 状态，在借、已还、取消
	Bits        string            `protobuf:"bytes,6,opt,name=Bits,proto3" json:"Bits,omitempty"`               // 已还Id对应的比特位"000001101" 长度和Llids一致，1代表已还
	Expire      int64             `protobuf:"varint,7,opt,name=Expire,proto3" json:"Expire,omitempty"`          //	// 到期时间，列表中最后一个的到期时间
	Credentials string            `protobuf:"bytes,8,opt,name=Credentials,proto3" json:"Credentials,omitempty"` // 确认证书
	Signature   string            `protobuf:"bytes,9,opt,name=Signature,proto3" json:"Signature,omitempty"`     // 签名
	RetImages   string            `protobuf:"bytes,10,opt,name=RetImages,proto3" json:"RetImages,omitempty"`    // 已还图片信息
	RetInfos    string            `protobuf:"bytes,11,opt,name=RetInfos,proto3" json:"RetInfos,omitempty"`      // 返还信息
	Remark      string            `protobuf:"bytes,12,opt,name=Remark,proto3" json:"Remark,omitempty"`          // 备注
	CreateAt    int64             `protobuf:"varint,13,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	UpdateAt    int64             `protobuf:"varint,14,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
	Extra       map[string]string `protobuf:"bytes,15,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LendLoanGather) Reset() {
	*x = LendLoanGather{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LendLoanGather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LendLoanGather) ProtoMessage() {}

func (x *LendLoanGather) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LendLoanGather.ProtoReflect.Descriptor instead.
func (*LendLoanGather) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{30}
}

func (x *LendLoanGather) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LendLoanGather) GetNdUid() int64 {
	if x != nil {
		return x.NdUid
	}
	return 0
}

func (x *LendLoanGather) GetAnUid() int64 {
	if x != nil {
		return x.AnUid
	}
	return 0
}

func (x *LendLoanGather) GetLlIds() string {
	if x != nil {
		return x.LlIds
	}
	return ""
}

func (x *LendLoanGather) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LendLoanGather) GetBits() string {
	if x != nil {
		return x.Bits
	}
	return ""
}

func (x *LendLoanGather) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *LendLoanGather) GetCredentials() string {
	if x != nil {
		return x.Credentials
	}
	return ""
}

func (x *LendLoanGather) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *LendLoanGather) GetRetImages() string {
	if x != nil {
		return x.RetImages
	}
	return ""
}

func (x *LendLoanGather) GetRetInfos() string {
	if x != nil {
		return x.RetInfos
	}
	return ""
}

func (x *LendLoanGather) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *LendLoanGather) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *LendLoanGather) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *LendLoanGather) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x77, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x02, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x70, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x22, 0x3e, 0x0a, 0x0c, 0x42, 0x61, 0x69, 0x64, 0x75, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x32, 0x22, 0xb7, 0x02, 0x0a, 0x0b, 0x42, 0x61, 0x69, 0x64, 0x75, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e,
	0x6e, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e,
	0x6e, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x64, 0x62, 0x6b, 0x4b, 0x67,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x64, 0x62, 0x6b, 0x4b, 0x67,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x61, 0x6e,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x64, 0x62, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x64, 0x62, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a, 0x11,
	0x42, 0x61, 0x69, 0x64, 0x75, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4c, 0x69,
	0x6e, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x9b, 0x01,
	0x0a, 0x0e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x35, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x69, 0x64,
	0x75, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4c, 0x69, 0x6e, 0x65, 0x50,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x5c, 0x0a, 0x0f, 0x42,
	0x61, 0x69, 0x64, 0x75, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x10, 0x42, 0x61,
	0x69, 0x64, 0x75, 0x44, 0x6f, 0x63, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x67, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6d,
	0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x31, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0x81, 0x02, 0x0a, 0x0e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x69, 0x64,
	0x75, 0x44, 0x6f, 0x63, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0xb2, 0x04, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x64, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x6e,
	0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38,
	0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb8, 0x02, 0x0a, 0x10, 0x42, 0x61, 0x69,
	0x64, 0x75, 0x49, 0x64, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x6e, 0x75, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x69, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x69, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x74, 0x68, 0x6e, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x74, 0x68, 0x6e, 0x69, 0x63, 0x12, 0x39,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x49, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x08, 0x43, 0x72, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x64, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x64, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x74,
	0x69, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x74,
	0x69, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x98, 0x01, 0x0a, 0x07, 0x50, 0x6b, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xd0, 0x02, 0x0a, 0x0a,
	0x56, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0xb6,
	0x01, 0x0a, 0x07, 0x56, 0x69, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x70, 0x44, 0x65, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a,
	0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb6, 0x03, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x22, 0xae, 0x01, 0x0a, 0x0a, 0x56, 0x69, 0x70, 0x50, 0x61, 0x79, 0x43, 0x62, 0x52, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x22, 0xc9, 0x01, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x50, 0x61, 0x79, 0x43, 0x62, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2e, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x70, 0x50, 0x61, 0x79, 0x43,
	0x62, 0x52, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6d, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x98, 0x01, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x76, 0x69, 0x70, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x69, 0x70, 0x41, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x07, 0x46, 0x6f, 0x6f, 0x74,
	0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x76, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x76, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x76, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x76, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x76, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x76, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x30,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9d, 0x02, 0x0a, 0x08, 0x41,
	0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x62, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x64, 0x22, 0xd7, 0x03, 0x0a, 0x0c, 0x4c,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4e,
	0x64, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x41, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x55, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x55, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x64, 0x49, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x64, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x6e, 0x49, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x6e, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x4e,
	0x64, 0x44, 0x76, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x64, 0x44,
	0x76, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6e, 0x44, 0x76, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6e, 0x44, 0x76, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xe3, 0x03, 0x0a, 0x0e, 0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61,
	0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x64, 0x55, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x41, 0x6e,
	0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4c, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x42, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x52, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4c, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x4b, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x4f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x53,
	0x54, 0x41, 0x46, 0x46, 0x4f, 0x52, 0x10, 0x80, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x53, 0x55, 0x50,
	0x45, 0x52, 0x4f, 0x52, 0x10, 0x80, 0x04, 0x2a, 0x8a, 0x01, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x11, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x56, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x76,
	0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x56, 0x49, 0x50, 0x5f, 0x31, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x56, 0x49, 0x50, 0x5f, 0x32, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x56, 0x49, 0x50,
	0x5f, 0x33, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x76, 0x69, 0x70,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x56, 0x49, 0x50, 0x5f, 0x31, 0x36, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x10, 0x0f, 0x2a, 0x82, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x4f, 0x4d, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x52, 0x4f,
	0x4d, 0x5f, 0x41, 0x4c, 0x49, 0x50, 0x41, 0x59, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x81, 0x10, 0x2a, 0x62, 0x0a, 0x0a, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x6c, 0x61, 0x74, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x16, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x4c, 0x4f, 0x43, 0x41,
	0x4c, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x6f, 0x6d, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x01,
	0x12, 0x1b, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x6f, 0x6d, 0x5f,
	0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x41, 0x4c, 0x49, 0x50, 0x41, 0x59, 0x10, 0x02, 0x2a, 0x30, 0x0a,
	0x08, 0x43, 0x65, 0x72, 0x74, 0x54, 0x79, 0x6f, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x6f, 0x65, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x6f, 0x65, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x10, 0x01, 0x2a,
	0xfb, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x1f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x24,
	0x0a, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4d, 0x41,
	0x49, 0x4c, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x10, 0x03,
	0x12, 0x27, 0x0a, 0x23, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e,
	0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x58, 0x10, 0x05, 0x2a, 0xbb, 0x02,
	0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x6c, 0x6f, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x6c,
	0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x03, 0x12, 0x18,
	0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x43, 0x45, 0x52, 0x54,
	0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12,
	0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x43, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x08, 0x12,
	0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x49, 0x50, 0x5f,
	0x4c, 0x45, 0x56, 0x45, 0x4c, 0x55, 0x50, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x45, 0x4e,
	0x44, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x0b, 0x2a, 0x30, 0x0a, 0x0b, 0x56,
	0x69, 0x70, 0x50, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x43, 0x48, 0x41, 0x52, 0x54, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x49, 0x50, 0x41, 0x59, 0x10, 0x02, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_common_proto_goTypes = []interface{}{
	(Role)(0),                    // 0: common.Role
	(VipLevel)(0),                // 1: common.VipLevel
	(UserStatus)(0),              // 2: common.UserStatus
	(FromPlatom)(0),              // 3: common.FromPlatom
	(CertTyoe)(0),                // 4: common.CertTyoe
	(UpdateUserinfoField)(0),     // 5: common.Update_userinfo_field
	(LogType)(0),                 // 6: common.LogType
	(VipPayStyle)(0),             // 7: common.VipPayStyle
	(*Authorize)(nil),            // 8: common.Authorize
	(*Request)(nil),              // 9: common.Request
	(*Response)(nil),             // 10: common.Response
	(*UpdateUserinfoItem)(nil),   // 11: common.UpdateUserinfoItem
	(*UserInfo)(nil),             // 12: common.UserInfo
	(*WechatUserinfo)(nil),       // 13: common.WechatUserinfo
	(*AlipayUserinfo)(nil),       // 14: common.AlipayUserinfo
	(*BaiduConcept)(nil),         // 15: common.BaiduConcept
	(*BaiduEntity)(nil),          // 16: common.BaiduEntity
	(*BaiduWordLocation)(nil),    // 17: common.BaiduWordLocation
	(*BaiduLineProbability)(nil), // 18: common.BaiduLineProbability
	(*BaiduWordsItem)(nil),       // 19: common.BaiduWordsItem
	(*BaiduResultItem)(nil),      // 20: common.BaiduResultItem
	(*BaiduDocAnalysis)(nil),     // 21: common.BaiduDocAnalysis
	(*BaiduIdentItem)(nil),       // 22: common.BaiduIdentItem
	(*PersonCert)(nil),           // 23: common.PersonCert
	(*BaiduIdcardIdent)(nil),     // 24: common.BaiduIdcardIdent
	(*UserLog)(nil),              // 25: common.UserLog
	(*CronItem)(nil),             // 26: common.CronItem
	(*PkgItem)(nil),              // 27: common.PkgItem
	(*VipProduct)(nil),           // 28: common.VipProduct
	(*VipDesc)(nil),              // 29: common.VipDesc
	(*VipOrder)(nil),             // 30: common.VipOrder
	(*VipPayCbRe)(nil),           // 31: common.VipPayCbRe
	(*VipPayCb)(nil),             // 32: common.VipPayCb
	(*UserScore)(nil),            // 33: common.UserScore
	(*UserVip)(nil),              // 34: common.UserVip
	(*FootLog)(nil),              // 35: common.FootLog
	(*AlipayCb)(nil),             // 36: common.AlipayCb
	(*LendLoanItem)(nil),         // 37: common.LendLoanItem
	(*LendLoanGather)(nil),       // 38: common.LendLoanGather
	nil,                          // 39: common.Authorize.ExtraEntry
	nil,                          // 40: common.Request.ExtraEntry
	nil,                          // 41: common.Response.ExtraEntry
	nil,                          // 42: common.UpdateUserinfoItem.ExtraEntry
	nil,                          // 43: common.PersonCert.ExtraEntry
	nil,                          // 44: common.BaiduIdcardIdent.ExtraEntry
	nil,                          // 45: common.CronItem.ExtraEntry
	nil,                          // 46: common.VipDesc.ExtraEntry
	nil,                          // 47: common.FootLog.ExtraEntry
	nil,                          // 48: common.LendLoanItem.ExtraEntry
	nil,                          // 49: common.LendLoanGather.ExtraEntry
}
var file_common_proto_depIdxs = []int32{
	39, // 0: common.Authorize.extra:type_name -> common.Authorize.ExtraEntry
	40, // 1: common.Request.extra:type_name -> common.Request.ExtraEntry
	41, // 2: common.Response.extra:type_name -> common.Response.ExtraEntry
	5,  // 3: common.UpdateUserinfoItem.field:type_name -> common.Update_userinfo_field
	42, // 4: common.UpdateUserinfoItem.extra:type_name -> common.UpdateUserinfoItem.ExtraEntry
	15, // 5: common.BaiduEntity.concept:type_name -> common.BaiduConcept
	17, // 6: common.BaiduWordsItem.location:type_name -> common.BaiduWordLocation
	18, // 7: common.BaiduWordsItem.probability:type_name -> common.BaiduLineProbability
	19, // 8: common.BaiduResultItem.word:type_name -> common.BaiduWordsItem
	20, // 9: common.BaiduDocAnalysis.results:type_name -> common.BaiduResultItem
	21, // 10: common.BaiduIdentItem.result:type_name -> common.BaiduDocAnalysis
	43, // 11: common.PersonCert.extra:type_name -> common.PersonCert.ExtraEntry
	44, // 12: common.BaiduIdcardIdent.extra:type_name -> common.BaiduIdcardIdent.ExtraEntry
	45, // 13: common.CronItem.extra:type_name -> common.CronItem.ExtraEntry
	46, // 14: common.VipDesc.extra:type_name -> common.VipDesc.ExtraEntry
	31, // 15: common.VipPayCb.resource:type_name -> common.VipPayCbRe
	47, // 16: common.FootLog.extra:type_name -> common.FootLog.ExtraEntry
	48, // 17: common.LendLoanItem.extra:type_name -> common.LendLoanItem.ExtraEntry
	49, // 18: common.LendLoanGather.extra:type_name -> common.LendLoanGather.ExtraEntry
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authorize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserinfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlipayUserinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduConcept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduWordLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduLineProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduWordsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduResultItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduDocAnalysis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduIdentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaiduIdcardIdent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkgItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipPayCbRe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipPayCb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlipayCb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LendLoanGather); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
